<?xml version="1.0"?>
<root>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:58Z" bundleName="oak-api" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="changed">
      <mismatch>false</mismatch>
      <newerVersion>3.1.1</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <suggestedVersion>3.1.1</suggestedVersion>
      <attributes>
        <version>3.1.1</version>
        <uses>javax.annotation,javax.jcr,javax.security.auth.login</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.api.QueryEngine" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="3.1.0" delta="removed"/>
      <version name="3.1.1" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>4.7.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <suggestedVersion>4.5.0</suggestedVersion>
      <warning>Excessive version increase</warning>
      <attributes>
        <version>4.7.0</version>
        <uses>javax.annotation,javax.management,javax.management.openmbean,org.apache.jackrabbit.oak.api</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.api.jmx.CacheStatsMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.CheckpointMBean" delta="minor">
        <method name="getOldestCheckpointCreationDate()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.util.Date" delta="added"/>
        </method>
        <method name="getOldestCheckpointCreationTimestamp()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.ConsolidatedCacheStatsMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.CopyOnWriteStoreMBean" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="CopyOnWriteStoreManager" delta="added"/>
        </field>
        <method name="disableCopyOnWrite()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="enableCopyOnWrite()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getStatus()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.FileStoreBackupRestoreMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.IndexStatsMBean" delta="minor">
        <method name="abortAndPause()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Aborts any running indexing cycle and pauses the indexer. Invoke 'resume' once you are read to resume indexing again'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Aborts any running indexing cycle and pauses the indexer. Invoke 'resume' once you are read to resume indexing again'" delta="removed"/>
          </annotated>
        </method>
        <method name="getName()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getNodesReadCount()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="getTotalExecutionCount()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="registerAsyncIndexer(java.lang.String,long)" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='name'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='delayInSeconds'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Name" delta="removed">
            <property name="value='name'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Name" delta="removed">
            <property name="value='delayInSeconds'" delta="removed"/>
          </annotated>
        </method>
        <method name="splitIndexingTask(java.lang.String,java.lang.String)" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Comma separated list of paths of the index definitions'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='The indexing task name set on the async property'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='paths'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='newIndexTaskName'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Comma separated list of paths of the index definitions'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='The indexing task name set on the async property'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Name" delta="removed">
            <property name="value='paths'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Name" delta="removed">
            <property name="value='newIndexTaskName'" delta="removed"/>
          </annotated>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.IndexerMBean" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="Indexer" delta="added"/>
        </field>
        <method name="importIndex(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Path on server file system where index content generated by oak-run is present'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='indexDirPath'" delta="added"/>
          </annotated>
          <return name="boolean" delta="added"/>
        </method>
        <method name="importIndex(java.lang.String,boolean)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Path on server file system where index content generated by oak-run is present'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Useful for importing generated content during startup when IndexMBean instances might not be available'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='indexDirPath'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='ignoreLocalLock'" delta="added"/>
          </annotated>
          <return name="boolean" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.PersistentCacheStatsMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.QueryEngineSettingsMBean" delta="changed">
        <method name="getFailTraversal()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Whether queries that don't use an index will fail (throw an exception). The default is false.'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Whether queries that don't use an index will fail (throw an exception). The default is false.'" delta="removed"/>
          </annotated>
        </method>
        <method name="getLimitInMemory()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Get the limit on how many nodes a query may read at most into memory, for &quot;order by&quot; and &quot;distinct&quot; queries. If this limit is exceeded, the query throws an exception.'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Get the limit on how many nodes a query may read at most into memory, for &quot;order by&quot; and &quot;distinct&quot; queries. If this limit is exceeded, the query throws an exception.'" delta="removed"/>
          </annotated>
        </method>
        <method name="getLimitReads()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Get the limit on how many nodes a query may read at most (raw read operations, including skipped nodes). If this limit is exceeded, the query throws an exception.'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Get the limit on how many nodes a query may read at most (raw read operations, including skipped nodes). If this limit is exceeded, the query throws an exception.'" delta="removed"/>
          </annotated>
        </method>
        <method name="isFastQuerySize()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Whether the query result size should return an estimation for large queries.'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Whether the query result size should return an estimation for large queries.'" delta="removed"/>
          </annotated>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.RepositoryManagementMBean" delta="minor">
        <method name="cancelRevisionGC()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Cancel a running revision garbage collection operation. Does nothing if revision garbage collection is not running.'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Cancel a running revision garbage collection operation. Does nothing if revision garbage collection is not running.'" delta="removed"/>
          </annotated>
        </method>
        <method name="cancelRevisionGCForRole(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Cancel a running revision garbage collection operation. Does nothing if revision garbage collection is not running.'" delta="added"/>
          </annotated>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="getBackupStatus()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='The status of the ongoing operation, or the terminal status of the last completed backup operation'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='The status of the ongoing operation, or the terminal status of the last completed backup operation'" delta="removed"/>
          </annotated>
        </method>
        <method name="getDataStoreGCStatus()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Data store garbage collection status'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Data store garbage collection status'" delta="removed"/>
          </annotated>
        </method>
        <method name="getPropertyIndexAsyncReindexStatus()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Asynchronous Property Index reindexing status'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Asynchronous Property Index reindexing status'" delta="removed"/>
          </annotated>
        </method>
        <method name="getRestoreStatus()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='The status of the ongoing operation, or the terminal status of the last completed restore operation'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='The status of the ongoing operation, or the terminal status of the last completed restore operation'" delta="removed"/>
          </annotated>
        </method>
        <method name="getRevisionGCStatus()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Revision garbage collection status'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Revision garbage collection status'" delta="removed"/>
          </annotated>
        </method>
        <method name="getRevisionGCStatusForRole(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Revision garbage collection status for a given role'" delta="added"/>
          </annotated>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="refreshAllSessions()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Refresh all currently open sessions'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Refresh all currently open sessions'" delta="removed"/>
          </annotated>
        </method>
        <method name="startBackup()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Creates a backup of the persistent state of the repository'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Creates a backup of the persistent state of the repository'" delta="removed"/>
          </annotated>
        </method>
        <method name="startDataStoreGC(boolean)" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Initiates a data store garbage collection operation'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Set to true to only mark references and not sweep in the mark and sweep operation. This mode is to be used when the underlying BlobStore is shared between multiple different repositories. For all other cases set it to false to perform full garbage collection'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
            <property name="value='markOnly'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Initiates a data store garbage collection operation'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Set to true to only mark references and not sweep in the mark and sweep operation. This mode is to be used when the underlying BlobStore is shared between multiple different repositories. For all other cases set it to false to perform full garbage collection'" delta="removed"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Name" delta="removed">
            <property name="value='markOnly'" delta="removed"/>
          </annotated>
        </method>
        <method name="startPropertyIndexAsyncReindex()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Initiates a reindex operation for the property indexes marked for reindexing'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Initiates a reindex operation for the property indexes marked for reindexing'" delta="removed"/>
          </annotated>
        </method>
        <method name="startRestore()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Restores the repository from a backup'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Restores the repository from a backup'" delta="removed"/>
          </annotated>
        </method>
        <method name="startRevisionGC()" delta="changed">
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Initiates a revision garbage collection operation'" delta="added"/>
          </annotated>
          <annotated name="org.apache.jackrabbit.oak.commons.jmx.Description" delta="removed">
            <property name="value='Initiates a revision garbage collection operation'" delta="removed"/>
          </annotated>
        </method>
        <method name="startRevisionGCForRole(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
            <property name="value='Initiates a revision garbage collection operation for a given role'" delta="added"/>
          </annotated>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.RepositoryStatsMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.api.jmx.SessionMBean" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <annotation name="org.apache.jackrabbit.oak.api.jmx.Description" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="java.lang.annotation.Annotation" delta="added"/>
        <field name="java.lang.String NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="description" delta="added"/>
        </field>
        <method name="annotationType()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Class&lt;+Ljava.lang.annotation.Annotation;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="value()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.management.DescriptorKey" delta="added">
            <property name="value='description'" delta="added"/>
          </annotated>
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="java.lang.annotation.Documented" delta="added"/>
        <annotated name="java.lang.annotation.Inherited" delta="added"/>
        <annotated name="java.lang.annotation.Retention" delta="added">
          <property name="value='RUNTIME'" delta="added"/>
        </annotated>
        <annotated name="java.lang.annotation.Target" delta="added">
          <property name="value.0='TYPE'" delta="added"/>
          <property name="value.1='CONSTRUCTOR'" delta="added"/>
          <property name="value.2='METHOD'" delta="added"/>
          <property name="value.3='PARAMETER'" delta="added"/>
        </annotated>
      </annotation>
      <annotation name="org.apache.jackrabbit.oak.api.jmx.Impact" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="java.lang.annotation.Annotation" delta="added"/>
        <field name="java.lang.String NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="impact" delta="added"/>
        </field>
        <method name="annotationType()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Class&lt;+Ljava.lang.annotation.Annotation;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="value()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.management.DescriptorKey" delta="added">
            <property name="value='impact'" delta="added"/>
          </annotated>
          <return name="org.apache.jackrabbit.oak.api.jmx.ImpactOption" delta="added"/>
        </method>
        <annotated name="java.lang.annotation.Documented" delta="added"/>
        <annotated name="java.lang.annotation.Inherited" delta="added"/>
        <annotated name="java.lang.annotation.Retention" delta="added">
          <property name="value='RUNTIME'" delta="added"/>
        </annotated>
        <annotated name="java.lang.annotation.Target" delta="added">
          <property name="value.0='METHOD'" delta="added"/>
        </annotated>
      </annotation>
      <annotation name="org.apache.jackrabbit.oak.api.jmx.Name" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="java.lang.annotation.Annotation" delta="added"/>
        <field name="java.lang.String NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="name" delta="added"/>
        </field>
        <method name="annotationType()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Class&lt;+Ljava.lang.annotation.Annotation;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="value()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.management.DescriptorKey" delta="added">
            <property name="value='name'" delta="added"/>
          </annotated>
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="java.lang.annotation.Documented" delta="added"/>
        <annotated name="java.lang.annotation.Inherited" delta="added"/>
        <annotated name="java.lang.annotation.Retention" delta="added">
          <property name="value='RUNTIME'" delta="added"/>
        </annotated>
        <annotated name="java.lang.annotation.Target" delta="added">
          <property name="value.0='PARAMETER'" delta="added"/>
        </annotated>
      </annotation>
      <enum name="org.apache.jackrabbit.oak.api.jmx.ImpactOption" delta="added">
        <access name="final" delta="added"/>
        <extends name="java.lang.Enum" delta="added"/>
        <implements name="java.io.Serializable" delta="added"/>
        <implements name="java.lang.Comparable" delta="added"/>
        <field name="org.apache.jackrabbit.oak.api.jmx.ImpactOption ACTION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.api.jmx.ImpactOption ACTION_INFO" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.api.jmx.ImpactOption INFO" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.api.jmx.ImpactOption UNKNOWN" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="compareTo(TE;)" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="compareTo(TT;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="final" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="getDeclaringClass()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;TE;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="name()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="ordinal()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="value()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="valueOf(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.jmx.ImpactOption" delta="added"/>
        </method>
        <method name="values()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.jmx.ImpactOption[]" delta="added"/>
        </method>
      </enum>
      <version name="4.4.2" delta="removed"/>
      <version name="4.7.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:05Z" bundleName="oak-auth-external" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.external" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>2.3.0</newerVersion>
      <olderVersion>2.3.0</olderVersion>
      <suggestedVersion>2.3.0</suggestedVersion>
      <attributes>
        <version>2.3.0</version>
        <uses>javax.annotation,javax.jcr,javax.security.auth.login,org.apache.jackrabbit.api.security.user</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.external.basic" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.3.0</newerVersion>
      <olderVersion>1.3.0</olderVersion>
      <suggestedVersion>1.3.0</suggestedVersion>
      <attributes>
        <version>1.3.0</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.spi.security.authentication.external</uses>
      </attributes>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:06Z" bundleName="oak-auth-ldap" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:07Z" bundleName="oak-authorization-cug" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.cug" delta="changed">
      <mismatch>false</mismatch>
      <newerVersion>2.0.1</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <suggestedVersion>2.0.1</suggestedVersion>
      <attributes>
        <version>2.0.1</version>
        <uses>javax.annotation,org.apache.jackrabbit.api.security,org.apache.jackrabbit.api.security.authorization</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.security.authorization.cug.CugExclude" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.security.authorization.cug.CugPolicy" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="2.0.0" delta="removed"/>
      <version name="2.0.1" delta="added"/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:01Z" bundleName="oak-blob-cloud-azure" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:01Z" bundleName="oak-blob-cloud" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.blob.cloud.s3.stats" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:59Z" bundleName="oak-blob-plugins" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:59Z" bundleName="oak-blob" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:58Z" bundleName="oak-commons" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.commons" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>com.google.common.base,com.google.common.collect,javax.annotation,org.apache.commons.io,org.slf4j</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.commons.FileIOUtils" delta="minor">
        <field name="com.google.common.base.Function passThruTransformer" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="merge(Ljava/util/List&lt;Ljava/io/File;&gt;;Ljava/io/File;Ljava/util/Comparator&lt;Ljava/lang/String;&gt;;)" delta="added">
          <access name="static" delta="added"/>
        </method>
        <method name="writeStrings(Ljava/util/Iterator&lt;Ljava/lang/String;&gt;;Ljava/io/File;ZLcom/google/common/base/Function&lt;Ljava/lang/String;Ljava/lang/String;&gt;;Lorg/slf4j/Logger;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <return name="int" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.IOUtils" delta="major">
        <method name="nextPowerOf2(int)" delta="major">
          <return name="int" delta="removed"/>
          <return name="long" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.OakVersion" delta="added">
        <access name="final" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getVersion(java.lang.String,java.lang.Class)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.PerfLogger" delta="added">
        <access name="final" delta="added"/>
        <method name="&lt;init&gt;(org.slf4j.Logger)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="end(long,long,java.lang.String,java.lang.Object)" delta="added"/>
        <method name="end(long,long,java.lang.String,java.lang.Object,java.lang.Object)" delta="added"/>
        <method name="end(long,long,java.lang.String,java.lang.Object[])" delta="added"/>
        <method name="end(long,long,long,java.lang.String,java.lang.Object)" delta="added"/>
        <method name="end(long,long,long,java.lang.String,java.lang.Object,java.lang.Object)" delta="added"/>
        <method name="end(long,long,long,java.lang.String,java.lang.Object[])" delta="added"/>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isDebugEnabled()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isInfoEnabled()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isTraceEnabled()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="start()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="start(java.lang.String)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="startForInfoLog()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="startForInfoLog(java.lang.String)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.Profiler" delta="added">
        <implements name="java.lang.Runnable" delta="added"/>
        <field name="boolean paused" delta="added"/>
        <field name="boolean sumClasses" delta="added"/>
        <field name="boolean sumMethods" delta="added"/>
        <field name="int depth" delta="added"/>
        <field name="int interval" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getInstrumentation()" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.instrument.Instrumentation" delta="added"/>
        </method>
        <method name="getTop(int)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="main(java.lang.String[])" delta="added">
          <access name="static" delta="added"/>
        </method>
        <method name="premain(java.lang.String,java.lang.instrument.Instrumentation)" delta="added">
          <access name="static" delta="added"/>
        </method>
        <method name="run()" delta="added"/>
        <method name="startCollecting()" delta="added">
          <return name="org.apache.jackrabbit.oak.commons.Profiler" delta="added"/>
        </method>
        <method name="stopCollecting()" delta="added">
          <return name="org.apache.jackrabbit.oak.commons.Profiler" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.StringUtils" delta="major">
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="convertBytesToHex(byte[])" delta="changed">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="convertHexToBytes(java.lang.String)" delta="changed">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.TimeDurationFormatter" delta="added">
        <method name="&lt;init&gt;(java.util.Locale,int,boolean)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="forLogging()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.TimeDurationFormatter" delta="added"/>
        </method>
        <method name="format(long,java.util.concurrent.TimeUnit)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.UUIDUtils" delta="added">
        <access name="final" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="generateUUID()" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="generateUUID(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isValidUUID(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.benchmark" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.cache" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <warning>Version has been increased but analysis detected no changes</warning>
      <attributes>
        <version>1.0.0</version>
      </attributes>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.concurrent" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <warning>Version has been increased but analysis detected no changes</warning>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation</uses>
      </attributes>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.io" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <warning>Version has been increased but analysis detected no changes</warning>
      <attributes>
        <version>1.0.0</version>
        <uses>com.google.common.io</uses>
      </attributes>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.json" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <warning>Version has been increased but analysis detected no changes</warning>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation</uses>
      </attributes>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.sort" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.commons.sort.ExternalSort" delta="major">
        <method name="merge(Ljava/io/BufferedWriter;Ljava/util/Comparator&lt;Ljava/lang/String;&gt;;ZLjava/util/List&lt;Lorg/apache/jackrabbit/oak/commons/sort/BinaryFileBuffer;&gt;;)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="int" delta="removed"/>
        </method>
        <method name="merge(Ljava/io/BufferedWriter;Ljava/util/Comparator&lt;TT;&gt;;ZLjava/util/List&lt;Lorg/apache/jackrabbit/oak/commons/sort/BinaryFileBuffer&lt;TT;&gt;;&gt;;Ljava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="mergeSortedFiles(Ljava/util/List&lt;Ljava/io/File;&gt;;Ljava/io/BufferedWriter;Ljava/util/Comparator&lt;TT;&gt;;Ljava/nio/charset/Charset;ZZLjava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;Ljava/util/function/Function&lt;Ljava/lang/String;TT;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="mergeSortedFiles(Ljava/util/List&lt;Ljava/io/File;&gt;;Ljava/io/File;Ljava/util/Comparator&lt;TT;&gt;;Ljava/nio/charset/Charset;ZZZLjava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;Ljava/util/function/Function&lt;Ljava/lang/String;TT;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="sortAndSave(Ljava/util/List&lt;TT;&gt;;Ljava/util/Comparator&lt;TT;&gt;;Ljava/nio/charset/Charset;Ljava/io/File;ZZLjava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.io.File" delta="added"/>
        </method>
        <method name="sortInBatch(Ljava/io/BufferedReader;JLjava/util/Comparator&lt;TT;&gt;;IJLjava/nio/charset/Charset;Ljava/io/File;ZIZLjava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;Ljava/util/function/Function&lt;Ljava/lang/String;TT;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.util.List&lt;Ljava.io.File;&gt;" delta="added"/>
        </method>
        <method name="sortInBatch(Ljava/io/File;Ljava/util/Comparator&lt;TT;&gt;;IJLjava/nio/charset/Charset;Ljava/io/File;ZIZLjava/util/function/Function&lt;TT;Ljava/lang/String;&gt;;Ljava/util/function/Function&lt;Ljava/lang/String;TT;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.util.List&lt;Ljava.io.File;&gt;" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:58Z" bundleName="oak-core-spi" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>com.google.common.cache,com.google.common.collect,javax.annotation,org.apache.jackrabbit.oak.api.jmx,org.apache.jackrabbit.oak.commons.jmx</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.cache.AbstractCacheStats" delta="added">
        <access name="abstract" delta="added"/>
        <extends name="javax.management.StandardMBean" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.commons.jmx.AnnotatedStandardMBean" delta="added"/>
        <implements name="javax.management.DynamicMBean" delta="added"/>
        <implements name="javax.management.MBeanRegistration" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.api.jmx.CacheStatsMBean" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="cacheInfoAsString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="cacheMBeanInfo(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttribute(java.lang.String)" delta="added"/>
        <method name="getAttributes(java.lang.String[])" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="getAverageLoadPenalty()" delta="added">
          <return name="double" delta="added"/>
        </method>
        <method name="getCachedMBeanInfo()" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getClassName(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getConstructors(javax.management.MBeanConstructorInfo[],java.lang.Object)" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanConstructorInfo[]" delta="added"/>
        </method>
        <method name="getCurrentStats()" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
          <return name="com.google.common.cache.CacheStats" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanAttributeInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanFeatureInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getEvictionCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getHitCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getHitRate()" delta="added">
          <return name="double" delta="added"/>
        </method>
        <method name="getImpact(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="getImplementation()" delta="added"/>
        <method name="getImplementationClass()" delta="added">
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getLoadCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getLoadExceptionCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getLoadExceptionRate()" delta="added">
          <return name="double" delta="added"/>
        </method>
        <method name="getLoadSuccessCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getMBeanInfo()" delta="added">
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getMBeanInterface()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getMissCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getMissRate()" delta="added">
          <return name="double" delta="added"/>
        </method>
        <method name="getName()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getRequestCount()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="getTotalLoadTime()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="invoke(java.lang.String,java.lang.Object[],java.lang.String[])" delta="added"/>
        <method name="postDeregister()" delta="added"/>
        <method name="postRegister(java.lang.Boolean)" delta="added"/>
        <method name="preDeregister()" delta="added"/>
        <method name="preRegister(javax.management.MBeanServer,javax.management.ObjectName)" delta="added">
          <return name="javax.management.ObjectName" delta="added"/>
        </method>
        <method name="resetStats()" delta="added"/>
        <method name="setAttribute(javax.management.Attribute)" delta="added"/>
        <method name="setAttributes(javax.management.AttributeList)" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="setImplementation(java.lang.Object)" delta="added"/>
        <method name="timeInWords(long)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.cache.CacheStats" delta="minor">
        <extends name="javax.management.StandardMBean" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.cache.AbstractCacheStats" delta="added"/>
        <implements name="javax.management.DynamicMBean" delta="added"/>
        <implements name="javax.management.MBeanRegistration" delta="added"/>
        <method name="&lt;init&gt;(Lcom/google/common/cache/Cache&lt;**&gt;;Ljava/lang/String;Lcom/google/common/cache/Weigher&lt;**&gt;;J)" delta="changed">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
        </method>
        <method name="cacheMBeanInfo(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttribute(java.lang.String)" delta="added"/>
        <method name="getAttributes(java.lang.String[])" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="getCachedMBeanInfo()" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getClassName(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getConstructors(javax.management.MBeanConstructorInfo[],java.lang.Object)" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanConstructorInfo[]" delta="added"/>
        </method>
        <method name="getCurrentStats()" delta="added">
          <access name="protected" delta="added"/>
          <return name="com.google.common.cache.CacheStats" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanAttributeInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanFeatureInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getImpact(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="getImplementation()" delta="added"/>
        <method name="getImplementationClass()" delta="added">
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getMBeanInfo()" delta="added">
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getMBeanInterface()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getName()" delta="changed">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="invoke(java.lang.String,java.lang.Object[],java.lang.String[])" delta="added"/>
        <method name="postDeregister()" delta="added"/>
        <method name="postRegister(java.lang.Boolean)" delta="added"/>
        <method name="preDeregister()" delta="added"/>
        <method name="preRegister(javax.management.MBeanServer,javax.management.ObjectName)" delta="added">
          <return name="javax.management.ObjectName" delta="added"/>
        </method>
        <method name="setAttribute(javax.management.Attribute)" delta="added"/>
        <method name="setAttributes(javax.management.AttributeList)" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="setImplementation(java.lang.Object)" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.cache.ConsolidatedCacheStats" delta="removed">
        <implements name="org.apache.jackrabbit.oak.api.jmx.ConsolidatedCacheStatsMBean" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getCacheStats()" delta="removed">
          <return name="javax.management.openmbean.TabularData" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="removed"/>
      </class>
      <class name="org.apache.jackrabbit.oak.cache.StringCache" delta="removed">
        <access name="final" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="get(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.commons.jmx" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>com.google.common.base,javax.annotation,javax.management,javax.management.openmbean,org.apache.jackrabbit.oak.api.jmx</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.commons.jmx.AbstractCheckpointMBean" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.api.jmx.CheckpointMBean" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="collectCheckpoints(javax.management.openmbean.TabularDataSupport)" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getOldestCheckpointCreationDate()" delta="added">
          <return name="java.util.Date" delta="added"/>
        </method>
        <method name="getOldestCheckpointCreationTimestamp()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="listCheckpoints()" delta="added">
          <return name="javax.management.openmbean.TabularData" delta="added"/>
        </method>
        <method name="toCompositeData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
          <return name="javax.management.openmbean.CompositeDataSupport" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.jmx.AnnotatedStandardMBean" delta="added">
        <extends name="javax.management.StandardMBean" delta="added"/>
        <implements name="javax.management.DynamicMBean" delta="added"/>
        <implements name="javax.management.MBeanRegistration" delta="added"/>
        <method name="&lt;init&gt;(Ljava/lang/Class&lt;*&gt;;)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="&lt;init&gt;(TT;Ljava/lang/Class&lt;TT;&gt;;)" delta="added"/>
        <method name="cacheMBeanInfo(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttribute(java.lang.String)" delta="added"/>
        <method name="getAttributes(java.lang.String[])" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="getCachedMBeanInfo()" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getClassName(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getConstructors(javax.management.MBeanConstructorInfo[],java.lang.Object)" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanConstructorInfo[]" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanAttributeInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanFeatureInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getImpact(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="getImplementation()" delta="added"/>
        <method name="getImplementationClass()" delta="added">
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getMBeanInfo()" delta="added">
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getMBeanInterface()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="invoke(java.lang.String,java.lang.Object[],java.lang.String[])" delta="added"/>
        <method name="postDeregister()" delta="added"/>
        <method name="postRegister(java.lang.Boolean)" delta="added"/>
        <method name="preDeregister()" delta="added"/>
        <method name="preRegister(javax.management.MBeanServer,javax.management.ObjectName)" delta="added">
          <return name="javax.management.ObjectName" delta="added"/>
        </method>
        <method name="setAttribute(javax.management.Attribute)" delta="added"/>
        <method name="setAttributes(javax.management.AttributeList)" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="setImplementation(java.lang.Object)" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.jmx.JmxUtil" delta="added">
        <access name="final" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="quoteValueIfRequired(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation" delta="added">
        <extends name="java.util.concurrent.FutureTask" delta="added"/>
        <implements name="java.util.concurrent.RunnableFuture" delta="added"/>
        <field name="int id" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <field name="java.lang.String name" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </field>
        <method name="cancel(boolean)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="done()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="done(Ljava/lang/String;TR;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation&lt;TR;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="get()" delta="added"/>
        <method name="get(JLjava/util/concurrent/TimeUnit;)" delta="added"/>
        <method name="getId()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="getName()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getStatus()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isCancelled()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isDone()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="newManagementOperation(Ljava/lang/String;Lcom/google/common/base/Supplier&lt;Ljava/lang/String;&gt;;Ljava/util/concurrent/Callable&lt;TR;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation&lt;TR;&gt;" delta="added"/>
        </method>
        <method name="newManagementOperation(Ljava/lang/String;Ljava/util/concurrent/Callable&lt;TR;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation&lt;TR;&gt;" delta="added"/>
        </method>
        <method name="run()" delta="added"/>
        <method name="runAndReset()" delta="added">
          <access name="protected" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="set(TV;)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="setException(java.lang.Throwable)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added">
        <access name="final" delta="added"/>
        <access name="static" delta="added"/>
        <field name="java.lang.String ITEM_CODE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="code" delta="added"/>
        </field>
        <field name="java.lang.String ITEM_ID" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="id" delta="added"/>
        </field>
        <field name="java.lang.String ITEM_MESSAGE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="message" delta="added"/>
        </field>
        <field name="java.lang.String[] ITEM_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="javax.management.openmbean.CompositeType ITEM_TYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="failed(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="failed(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="formatTime(long)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="fromCompositeData(javax.management.openmbean.CompositeData)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="getCode()" delta="added">
          <return name="org.apache.jackrabbit.oak.api.jmx.RepositoryManagementMBean$StatusCode" delta="added"/>
        </method>
        <method name="getId()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="getMessage()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="initiated(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="initiated(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="isFailure()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isSuccess()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="none(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="none(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="running(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="running(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="succeeded(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="succeeded(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="toCompositeData()" delta="added">
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="toTabularData(Ljava/lang/Iterable&lt;Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation$Status;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="javax.management.openmbean.TabularData" delta="added"/>
        </method>
        <method name="unavailable(Lorg/apache/jackrabbit/oak/commons/jmx/ManagementOperation&lt;*&gt;;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
        <method name="unavailable(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.commons.jmx.ManagementOperation$Status" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,javax.jcr,javax.jcr.nodetype</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.namepath.GlobalNameMapper" delta="removed">
        <implements name="org.apache.jackrabbit.oak.namepath.NameMapper" delta="removed"/>
        <method name="&lt;init&gt;(Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.api.Root)" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getNamespacesProperty(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakNameFromExpanded(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakPrefixOrNull(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakURIOrNull(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getPrefixes()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="removed"/>
        </method>
        <method name="getSessionLocalMappings()" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="isExpandedName(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <access name="static" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="isHiddenName(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <access name="static" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="onSessionRefresh()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.namepath.LocalNameMapper" delta="removed">
        <extends name="org.apache.jackrabbit.oak.namepath.GlobalNameMapper" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.namepath.NameMapper" delta="removed"/>
        <field name="java.util.Map local" delta="removed">
          <access name="final" delta="removed"/>
          <access name="protected" delta="removed"/>
        </field>
        <method name="&lt;init&gt;(Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="removed"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/api/Root;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getNamespacesProperty(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakNameFromExpanded(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakPrefixOrNull(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakURIOrNull(java.lang.String)" delta="removed">
          <access name="protected" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getPrefixes()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="removed"/>
        </method>
        <method name="getSessionLocalMappings()" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="onSessionRefresh()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.namepath.NamePathMapperImpl" delta="removed">
        <implements name="org.apache.jackrabbit.oak.namepath.NamePathMapper" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.namepath.NameMapper)" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.namepath.NameMapper,org.apache.jackrabbit.oak.plugins.identifier.IdentifierManager)" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getJcrPath(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getOakPath(java.lang.String)" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getSessionLocalMappings()" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.namepath.JcrPathParser$Listener" delta="added">
        <access name="abstract" delta="added"/>
        <access name="static" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.namepath.JcrNameParser$Listener" delta="added"/>
        <method name="current()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="error(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="name(java.lang.String,int)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="parent()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="root()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.namepath.NameMapper" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.namepath.NamePathMapper" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.namepath.PathMapper" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.spi.whiteboard,org.osgi.framework,org.osgi.service.component</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.osgi.ObserverTracker" delta="removed">
        <implements name="org.osgi.util.tracker.ServiceTrackerCustomizer" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.commit.Observable)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
        </method>
        <method name="addingService(org.osgi.framework.ServiceReference)" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="modifiedService(org.osgi.framework.ServiceReference,java.lang.Object)" delta="removed"/>
        <method name="removedService(org.osgi.framework.ServiceReference,java.lang.Object)" delta="removed"/>
        <method name="start(org.osgi.framework.BundleContext)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
        </method>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.osgi.OsgiUtil" delta="minor">
        <method name="getFilter(Ljava/lang/Class&lt;*&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.osgi.framework.Filter" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.osgi.OsgiWhiteboard" delta="minor">
        <method name="track(Ljava/lang/Class&lt;TT;&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.Tracker&lt;TT;&gt;" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.descriptors" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.whiteboard</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.descriptors.AggregatingDescriptors" delta="added">
        <implements name="org.apache.jackrabbit.oak.api.Descriptors" delta="added"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/spi/whiteboard/Tracker&lt;Lorg/apache/jackrabbit/oak/api/Descriptors;&gt;;)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getKeys()" delta="added">
          <return name="java.lang.String[]" delta="added"/>
        </method>
        <method name="getValue(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="getValues(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.Value[]" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isSingleValueDescriptor(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isStandardDescriptor(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.descriptors.GenericDescriptors" delta="added">
        <implements name="org.apache.jackrabbit.oak.api.Descriptors" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.api.Descriptors)" delta="added">
          <annotated name="javax.annotation.Nullable" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getKeys()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String[]" delta="added"/>
        </method>
        <method name="getValue(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="getValues(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.Value[]" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isSingleValueDescriptor(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isStandardDescriptor(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="put(java.lang.String,javax.jcr.Value,boolean,boolean)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.descriptors.GenericDescriptors" delta="added"/>
        </method>
        <method name="put(java.lang.String,javax.jcr.Value[],boolean,boolean)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.descriptors.GenericDescriptors" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.1.0</suggestedVersion>
      <warning>Excessive version increase</warning>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.spi.whiteboard,org.slf4j</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.gc.LoggingGCMonitor" delta="added">
        <implements name="org.apache.jackrabbit.oak.spi.gc.GCMonitor" delta="added"/>
        <method name="&lt;init&gt;(org.slf4j.Logger)" delta="added"/>
        <method name="cleaned(long,long)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="compacted()" delta="added"/>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="error(java.lang.String,java.lang.Exception)" delta="added"/>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="info(java.lang.String,java.lang.Object[])" delta="added"/>
        <method name="skipped(java.lang.String,java.lang.Object[])" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="updateStatus(java.lang.String)" delta="added"/>
        <method name="warn(java.lang.String,java.lang.Object[])" delta="added"/>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>3.1.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <suggestedVersion>3.0.0</suggestedVersion>
      <warning>Excessive version increase</warning>
      <attributes>
        <version>3.1.0</version>
        <uses>javax.annotation</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher" delta="added">
        <access name="final" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="startsWith(java.lang.String,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.mount.MountInfo" delta="added">
        <access name="final" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.spi.mount.Mount" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getIncludedPaths()" delta="added">
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPathFragmentName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPathsSupportingFragments()" delta="added">
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isDefault()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isDirectlyUnder(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isMounted(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isReadOnly()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isSupportFragment(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isSupportFragmentUnder(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isUnder(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.mount.Mounts" delta="major">
        <method name="defaultMount()" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.Mount" delta="removed"/>
        </method>
        <method name="defaultMount(Ljava/util/Collection&lt;Lorg/apache/jackrabbit/oak/spi/mount/Mount;&gt;;)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.Mount" delta="removed"/>
        </method>
        <method name="newBuilder()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.Mounts$Builder" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.mount.Mounts$Builder" delta="added">
        <access name="final" delta="added"/>
        <access name="static" delta="added"/>
        <method name="build()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.mount.MountInfoProvider" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="mount(Ljava/lang/String;ZLjava/util/List&lt;Ljava/lang/String;&gt;;Ljava/util/List&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.mount.Mounts$Builder" delta="added"/>
        </method>
        <method name="mount(java.lang.String,java.lang.String[])" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.mount.Mounts$Builder" delta="added"/>
        </method>
        <method name="readOnlyMount(java.lang.String,java.lang.String[])" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.mount.Mounts$Builder" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.mount.Mount" delta="major">
        <method name="isSupportFragment()" delta="removed">
          <access name="abstract" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="isSupportFragment(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isSupportFragmentUnder(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.mount.MountInfoProvider" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <enum name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result" delta="added">
        <access name="final" delta="added"/>
        <access name="static" delta="added"/>
        <extends name="java.lang.Enum" delta="added"/>
        <implements name="java.io.Serializable" delta="added"/>
        <implements name="java.lang.Comparable" delta="added"/>
        <field name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result FULL_MATCH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result MISMATCH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result PARTIAL_MATCH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="compareTo(TE;)" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="compareTo(TT;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="final" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="getDeclaringClass()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;TE;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="name()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="ordinal()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="valueOf(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result" delta="added"/>
        </method>
        <method name="values()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.mount.FragmentMatcher$Result[]" delta="added"/>
        </method>
      </enum>
      <version name="2.2.0" delta="removed"/>
      <version name="3.1.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.namespace" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.namespace.NamespaceConstants" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String NAMESPACES_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:system/rep:namespaces" delta="added"/>
        </field>
        <field name="java.lang.String NAMESPACE_REP" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="internal" delta="added"/>
        </field>
        <field name="java.lang.String NAMESPACE_SV" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="http://www.jcp.org/jcr/sv/1.0" delta="added"/>
        </field>
        <field name="java.lang.String NAMESPACE_XMLNS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="http://www.w3.org/2000/xmlns/" delta="added"/>
        </field>
        <field name="java.lang.String PREFIX_REP" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep" delta="added"/>
        </field>
        <field name="java.lang.String PREFIX_SV" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="sv" delta="added"/>
        </field>
        <field name="java.lang.String PREFIX_XMLNS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="xmlns" delta="added"/>
        </field>
        <field name="java.lang.String REP_NAMESPACES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:namespaces" delta="added"/>
        </field>
        <field name="java.lang.String REP_NSDATA" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:nsdata" delta="added"/>
        </field>
        <field name="java.lang.String REP_PREFIXES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:prefixes" delta="added"/>
        </field>
        <field name="java.lang.String REP_URIS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:uris" delta="added"/>
        </field>
        <field name="java.util.Collection RESERVED_PREFIXES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Collection RESERVED_URIS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.nodetype" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,javax.jcr,javax.jcr.nodetype,org.apache.jackrabbit,org.apache.jackrabbit.oak.api</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.nodetype.DefinitionProvider" delta="added">
        <access name="abstract" delta="added"/>
        <method name="getDefinition(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.nodetype.NodeDefinition" delta="added"/>
        </method>
        <method name="getDefinition(org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.api.PropertyState,boolean)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.nodetype.PropertyDefinition" delta="added"/>
        </method>
        <method name="getDefinition(org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.nodetype.NodeDefinition" delta="added"/>
        </method>
        <method name="getRootDefinition()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.nodetype.NodeDefinition" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.nodetype.EffectiveNodeType" delta="added">
        <access name="abstract" delta="added"/>
        <method name="checkMandatoryItems(org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="checkOrderableChildNodes()" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="checkRemoveProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="checkSetProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="getAutoCreateNodeDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.NodeDefinition;&gt;" delta="added"/>
        </method>
        <method name="getAutoCreatePropertyDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.PropertyDefinition;&gt;" delta="added"/>
        </method>
        <method name="getMandatoryNodeDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.NodeDefinition;&gt;" delta="added"/>
        </method>
        <method name="getMandatoryPropertyDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.PropertyDefinition;&gt;" delta="added"/>
        </method>
        <method name="getNamedNodeDefinitions(Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.NodeDefinition;&gt;" delta="added"/>
        </method>
        <method name="getNamedPropertyDefinitions(Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.PropertyDefinition;&gt;" delta="added"/>
        </method>
        <method name="getNodeDefinition(java.lang.String,org.apache.jackrabbit.oak.spi.nodetype.EffectiveNodeType)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.jcr.nodetype.NodeDefinition" delta="added"/>
        </method>
        <method name="getNodeDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.NodeDefinition;&gt;" delta="added"/>
        </method>
        <method name="getPropertyDefinition(java.lang.String,boolean,int,boolean)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.jcr.nodetype.PropertyDefinition" delta="added"/>
        </method>
        <method name="getPropertyDefinition(java.lang.String,int,boolean)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.jcr.nodetype.PropertyDefinition" delta="added"/>
        </method>
        <method name="getPropertyDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.PropertyDefinition;&gt;" delta="added"/>
        </method>
        <method name="getResidualNodeDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.NodeDefinition;&gt;" delta="added"/>
        </method>
        <method name="getResidualPropertyDefinitions()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljavax.jcr.nodetype.PropertyDefinition;&gt;" delta="added"/>
        </method>
        <method name="includesNodeType(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="includesNodeTypes(java.lang.String[])" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="supportsMixin(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.nodetype.EffectiveNodeTypeProvider" delta="added">
        <access name="abstract" delta="added"/>
        <method name="getEffectiveNodeType(javax.jcr.Node)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.nodetype.EffectiveNodeType" delta="added"/>
        </method>
        <method name="getEffectiveNodeType(org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.nodetype.EffectiveNodeType" delta="added"/>
        </method>
        <method name="isNodeType(Ljava/lang/String;Ljava/util/Iterator&lt;Ljava/lang/String;&gt;;Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isNodeType(java.lang.String,java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isNodeType(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.nodetype.NodeTypeConstants" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="org.apache.jackrabbit.JcrConstants" delta="added"/>
        <field name="java.lang.String JCR_AVAILABLE_QUERY_OPERATORS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:availableQueryOperators" delta="added"/>
        </field>
        <field name="java.lang.String JCR_CREATEDBY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:createdBy" delta="added"/>
        </field>
        <field name="java.lang.String JCR_IS_ABSTRACT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:isAbstract" delta="added"/>
        </field>
        <field name="java.lang.String JCR_IS_FULLTEXT_SEARCHABLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:isFullTextSearchable" delta="added"/>
        </field>
        <field name="java.lang.String JCR_IS_QUERYABLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:isQueryable" delta="added"/>
        </field>
        <field name="java.lang.String JCR_IS_QUERY_ORDERABLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:isQueryOrderable" delta="added"/>
        </field>
        <field name="java.lang.String JCR_LASTMODIFIEDBY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:lastModifiedBy" delta="added"/>
        </field>
        <field name="java.lang.String JCR_NODE_TYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:nodeTypes" delta="added"/>
        </field>
        <field name="java.lang.String MIX_ATOMIC_COUNTER" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="mix:atomicCounter" delta="added"/>
        </field>
        <field name="java.lang.String MIX_CREATED" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="mix:created" delta="added"/>
        </field>
        <field name="java.lang.String MIX_INDEXABLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="mix:indexable" delta="added"/>
        </field>
        <field name="java.lang.String MIX_LASTMODIFIED" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="mix:lastModified" delta="added"/>
        </field>
        <field name="java.lang.String MIX_REP_MERGE_CONFLICT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:MergeConflict" delta="added"/>
        </field>
        <field name="java.lang.String NODE_TYPES_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:system/jcr:nodeTypes" delta="added"/>
        </field>
        <field name="java.lang.String NT_OAK_RESOURCE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak:Resource" delta="added"/>
        </field>
        <field name="java.lang.String NT_OAK_UNSTRUCTURED" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak:Unstructured" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_CHILD_NODE_DEFINITION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:ChildNodeDefinition" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_CHILD_NODE_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:ChildNodeDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_NAMED_CHILD_NODE_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:NamedChildNodeDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_NAMED_PROPERTY_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:NamedPropertyDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_NODE_TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:NodeType" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_NODE_TYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:nodeTypes" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_PROPERTY_DEFINITION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:PropertyDefinition" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_PROPERTY_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:PropertyDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_ROOT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:root" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_SYSTEM" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:system" delta="added"/>
        </field>
        <field name="java.lang.String NT_REP_UNSTRUCTURED" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:Unstructured" delta="added"/>
        </field>
        <field name="java.lang.String REP_DECLARING_NODE_TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:declaringNodeType" delta="added"/>
        </field>
        <field name="java.lang.String REP_HAS_PROTECTED_RESIDUAL_CHILD_NODES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:hasProtectedResidualChildNodes" delta="added"/>
        </field>
        <field name="java.lang.String REP_HAS_PROTECTED_RESIDUAL_PROPERTIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:hasProtectedResidualProperties" delta="added"/>
        </field>
        <field name="java.lang.String REP_MANDATORY_CHILD_NODES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:mandatoryChildNodes" delta="added"/>
        </field>
        <field name="java.lang.String REP_MANDATORY_PROPERTIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:mandatoryProperties" delta="added"/>
        </field>
        <field name="java.lang.String REP_MIXIN_SUBTYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:mixinSubtypes" delta="added"/>
        </field>
        <field name="java.lang.String REP_MIXIN_TYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:mixinTypes" delta="added"/>
        </field>
        <field name="java.lang.String REP_NAMED_CHILD_NODE_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:namedChildNodeDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String REP_NAMED_PROPERTY_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:namedPropertyDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String REP_NAMED_SINGLE_VALUED_PROPERTIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:namedSingleValuedProperties" delta="added"/>
        </field>
        <field name="java.lang.String REP_OURS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:ours" delta="added"/>
        </field>
        <field name="java.lang.String REP_PRIMARY_SUBTYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:primarySubtypes" delta="added"/>
        </field>
        <field name="java.lang.String REP_PRIMARY_TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:primaryType" delta="added"/>
        </field>
        <field name="java.lang.String REP_PROTECTED_CHILD_NODES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:protectedChildNodes" delta="added"/>
        </field>
        <field name="java.lang.String REP_PROTECTED_PROPERTIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:protectedProperties" delta="added"/>
        </field>
        <field name="java.lang.String REP_RESIDUAL_CHILD_NODE_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:residualChildNodeDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String REP_RESIDUAL_PROPERTY_DEFINITIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:residualPropertyDefinitions" delta="added"/>
        </field>
        <field name="java.lang.String REP_SUPERTYPES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:supertypes" delta="added"/>
        </field>
        <field name="java.lang.String REP_UUID" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:uuid" delta="added"/>
        </field>
        <field name="java.lang.String RESIDUAL_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="*" delta="added"/>
        </field>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.observation" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.observation.ChangeSet" delta="added">
        <access name="final" delta="added"/>
        <field name="java.lang.String COMMIT_CONTEXT_OBSERVATION_CHANGESET" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak.observation.changeSet" delta="added"/>
        </field>
        <method name="anyOverflow()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="asString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="doesHitMaxPathDepth()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="fromString(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSet" delta="added"/>
        </method>
        <method name="getAllNodeTypes()" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getMaxPrefilterPathDepth()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="getParentNodeNames()" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getParentNodeTypes()" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getParentPaths()" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getPropertyNames()" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added">
        <method name="&lt;init&gt;(int,int)" delta="added"/>
        <method name="add(org.apache.jackrabbit.oak.spi.observation.ChangeSet)" delta="added">
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addNodeType(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addNodeTypes(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addParentNodeName(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addParentNodeType(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addParentNodeTypes(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addParentPath(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="addPropertyName(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSetBuilder" delta="added"/>
        </method>
        <method name="build()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.observation.ChangeSet" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getMaxPrefilterPathDepth()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isAllNodeTypeOverflown()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isParentNodeNameOverflown()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isParentNodeTypeOverflown()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isParentPathOverflown()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="isPropertyNameOverflown()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.version" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>org.apache.jackrabbit</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.version.VersionConstants" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="org.apache.jackrabbit.JcrConstants" delta="added"/>
        <field name="java.lang.String ACTIVITIES_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:system/jcr:activities" delta="added"/>
        </field>
        <field name="java.lang.String CONFIGURATIONS_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:system/jcr:configurations" delta="added"/>
        </field>
        <field name="java.lang.String JCR_ACTIVITIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:activities" delta="added"/>
        </field>
        <field name="java.lang.String JCR_ACTIVITY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:activity" delta="added"/>
        </field>
        <field name="java.lang.String JCR_ACTIVITY_TITLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:activityTitle" delta="added"/>
        </field>
        <field name="java.lang.String JCR_CHILD_VERSION_HISTORY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:childVersionHistory" delta="added"/>
        </field>
        <field name="java.lang.String JCR_CONFIGURATION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:configuration" delta="added"/>
        </field>
        <field name="java.lang.String JCR_CONFIGURATIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:configurations" delta="added"/>
        </field>
        <field name="java.lang.String JCR_COPIED_FROM" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:copiedFrom" delta="added"/>
        </field>
        <field name="java.lang.String JCR_ROOT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:root" delta="added"/>
        </field>
        <field name="java.lang.String MIX_REP_VERSIONABLE_PATHS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:VersionablePaths" delta="added"/>
        </field>
        <field name="java.lang.String NT_ACTIVITY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="nt:activity" delta="added"/>
        </field>
        <field name="java.lang.String NT_CONFIGURATION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="nt:configuration" delta="added"/>
        </field>
        <field name="java.lang.String REP_ACTIVITIES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:Activities" delta="added"/>
        </field>
        <field name="java.lang.String REP_CONFIGURATIONS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:Configurations" delta="added"/>
        </field>
        <field name="java.lang.String REP_VERSIONSTORAGE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:versionStorage" delta="added"/>
        </field>
        <field name="java.lang.String RESTORE_PREFIX" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="restore-" delta="added"/>
        </field>
        <field name="java.lang.String VERSION_STORE_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:system/jcr:versionStorage" delta="added"/>
        </field>
        <field name="java.util.Collection SYSTEM_PATHS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Collection VERSION_NODE_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Collection VERSION_NODE_TYPE_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Collection VERSION_PROPERTY_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Set VERSION_STORE_NT_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Set VERSION_STORE_ROOT_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>com.google.common.base,javax.annotation</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.DefaultWhiteboard" delta="minor">
        <method name="track(Ljava/lang/Class&lt;TT;&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.Tracker&lt;TT;&gt;" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardAuthorizableActionProvider" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.security.user.action.AuthorizableActionProvider" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getAuthorizableActions(Lorg/apache/jackrabbit/oak/spi/security/SecurityProvider;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.util.List&lt;+Lorg.apache.jackrabbit.oak.spi.security.user.action.AuthorizableAction;&gt;" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardAuthorizableNodeName" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.security.user.AuthorizableNodeName" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="generateNodeName(java.lang.String)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardEditorProvider" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.commit.EditorProvider" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getRootEditor(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.spi.commit.CommitInfo)" delta="removed">
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.commit.Editor" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardIndexEditorProvider" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getIndexEditor(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.plugins.index.IndexUpdateCallback)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.commit.Editor" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardIndexProvider" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.query.QueryIndexProvider" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getQueryIndexes(Lorg/apache/jackrabbit/oak/spi/state/NodeState;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.util.List&lt;+Lorg.apache.jackrabbit.oak.spi.query.QueryIndex;&gt;" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardRestrictionProvider" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionProvider" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="createRestriction(java.lang.String,java.lang.String,javax.jcr.Value)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction" delta="removed"/>
        </method>
        <method name="createRestriction(java.lang.String,java.lang.String,javax.jcr.Value[])" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getPattern(Ljava/lang/String;Ljava/util/Set&lt;Lorg/apache/jackrabbit/oak/spi/security/authorization/restriction/Restriction;&gt;;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionPattern" delta="removed"/>
        </method>
        <method name="getPattern(java.lang.String,org.apache.jackrabbit.oak.api.Tree)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionPattern" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="getSupportedRestrictions(Ljava/lang/String;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="java.util.Set&lt;Lorg.apache.jackrabbit.oak.spi.security.authorization.restriction.RestrictionDefinition;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="readRestrictions(Ljava/lang/String;Lorg/apache/jackrabbit/oak/api/Tree;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="java.util.Set&lt;Lorg.apache.jackrabbit.oak.spi.security.authorization.restriction.Restriction;&gt;" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="validateRestrictions(java.lang.String,org.apache.jackrabbit.oak.api.Tree)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
        </method>
        <method name="writeRestrictions(Ljava/lang/String;Lorg/apache/jackrabbit/oak/api/Tree;Ljava/util/Set&lt;Lorg/apache/jackrabbit/oak/spi/security/authorization/restriction/Restriction;&gt;;)" delta="removed"/>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUserAuthenticationFactory" delta="removed">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.security.user.UserAuthenticationFactory" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.security.user.UserAuthenticationFactory)" delta="removed">
          <annotated name="javax.annotation.Nullable" delta="removed"/>
        </method>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getAuthentication(org.apache.jackrabbit.oak.spi.security.user.UserConfiguration,org.apache.jackrabbit.oak.api.Root,java.lang.String)" delta="removed">
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authentication.Authentication" delta="removed"/>
        </method>
        <method name="getServices()" delta="removed">
          <access name="protected" delta="removed"/>
          <return name="java.util.List&lt;TT;&gt;" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="start(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard)" delta="removed"/>
        <method name="stop()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils" delta="major">
        <method name="registerObserver(org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard,org.apache.jackrabbit.oak.spi.commit.Observer)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.Registration" delta="removed"/>
        </method>
        <method name="scheduleWithFixedDelay(Lorg/apache/jackrabbit/oak/spi/whiteboard/Whiteboard;Ljava/lang/Runnable;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;JLorg/apache/jackrabbit/oak/spi/whiteboard/WhiteboardUtils$ScheduleExecutionInstanceTypes;Z)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.Registration" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.whiteboard.Tracker" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.whiteboard.Whiteboard" delta="minor">
        <method name="track(Ljava/lang/Class&lt;TT;&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.Tracker&lt;TT;&gt;" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <enum name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes" delta="added">
        <access name="final" delta="added"/>
        <access name="static" delta="added"/>
        <extends name="java.lang.Enum" delta="added"/>
        <implements name="java.io.Serializable" delta="added"/>
        <implements name="java.lang.Comparable" delta="added"/>
        <field name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes DEFAULT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes RUN_ON_LEADER" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes RUN_ON_SINGLE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="compareTo(TE;)" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="compareTo(TT;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <access name="final" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </method>
        <method name="getDeclaringClass()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;TE;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="name()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="ordinal()" delta="added">
          <access name="final" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="valueOf(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes" delta="added"/>
        </method>
        <method name="values()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.whiteboard.WhiteboardUtils$ScheduleExecutionInstanceTypes[]" delta="added"/>
        </method>
      </enum>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.1.0</suggestedVersion>
      <warning>Excessive version increase</warning>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,javax.management.openmbean,org.apache.jackrabbit.api.stats,org.apache.jackrabbit.oak.api.jmx,org.apache.jackrabbit.oak.commons.jmx,org.apache.jackrabbit.oak.spi.whiteboard,org.apache.jackrabbit.stats,org.slf4j</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.stats.RepositoryStats" delta="minor">
        <extends name="javax.management.StandardMBean" delta="added"/>
        <implements name="javax.management.DynamicMBean" delta="added"/>
        <implements name="javax.management.MBeanRegistration" delta="added"/>
        <method name="cacheMBeanInfo(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttribute(java.lang.String)" delta="added"/>
        <method name="getAttributes(java.lang.String[])" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="getCachedMBeanInfo()" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getClassName(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getConstructors(javax.management.MBeanConstructorInfo[],java.lang.Object)" delta="added">
          <access name="protected" delta="added"/>
          <return name="javax.management.MBeanConstructorInfo[]" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanAttributeInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanFeatureInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getDescription(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getImpact(javax.management.MBeanOperationInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="getImplementation()" delta="added"/>
        <method name="getImplementationClass()" delta="added">
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getMBeanInfo()" delta="added">
          <return name="javax.management.MBeanInfo" delta="added"/>
        </method>
        <method name="getMBeanInterface()" delta="added">
          <access name="final" delta="added"/>
          <return name="java.lang.Class&lt;*&gt;" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanConstructorInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getParameterName(javax.management.MBeanOperationInfo,javax.management.MBeanParameterInfo,int)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="invoke(java.lang.String,java.lang.Object[],java.lang.String[])" delta="added"/>
        <method name="postDeregister()" delta="added"/>
        <method name="postRegister(java.lang.Boolean)" delta="added"/>
        <method name="preDeregister()" delta="added"/>
        <method name="preRegister(javax.management.MBeanServer,javax.management.ObjectName)" delta="added">
          <return name="javax.management.ObjectName" delta="added"/>
        </method>
        <method name="setAttribute(javax.management.Attribute)" delta="added"/>
        <method name="setAttributes(javax.management.AttributeList)" delta="added">
          <return name="javax.management.AttributeList" delta="added"/>
        </method>
        <method name="setImplementation(java.lang.Object)" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.stats.CounterStats" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.stats.HistogramStats" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.stats.MeterStats" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.stats.StatisticsProvider" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.stats.TimerStats" delta="changed">
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:00Z" bundleName="oak-core" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath.impl" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.plugins.identifier,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.namepath.impl.GlobalNameMapper" delta="added">
        <implements name="org.apache.jackrabbit.oak.namepath.NameMapper" delta="added"/>
        <method name="&lt;init&gt;(Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.api.Root)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getNamespacesProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakNameFromExpanded(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakPrefixOrNull(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakURIOrNull(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPrefixes()" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getSessionLocalMappings()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isExpandedName(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isHiddenName(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="onSessionRefresh()" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.namepath.impl.LocalNameMapper" delta="added">
        <extends name="org.apache.jackrabbit.oak.namepath.impl.GlobalNameMapper" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.namepath.NameMapper" delta="added"/>
        <field name="java.util.Map local" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="&lt;init&gt;(Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/api/Root;Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getNamespacesProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakNameFromExpanded(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakPrefixOrNull(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakURIOrNull(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPrefixes()" delta="added">
          <access name="protected" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getSessionLocalMappings()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="onSessionRefresh()" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.namepath.impl.NamePathMapperImpl" delta="added">
        <implements name="org.apache.jackrabbit.oak.namepath.NamePathMapper" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.namepath.NameMapper)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.namepath.NameMapper,org.apache.jackrabbit.oak.plugins.identifier.IdentifierManager)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getJcrName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getJcrPath(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakName(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakNameOrNull(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOakPath(java.lang.String)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getSessionLocalMappings()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.importer" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.plugins.index,org.apache.jackrabbit.oak.spi.state,org.apache.jackrabbit.oak.stats</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.AbortingIndexerLock" delta="added">
        <implements name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock" delta="added"/>
        <field name="int TIMEOUT_SECONDS" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="300" delta="added"/>
        </field>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.plugins.index.AsyncIndexInfoService)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.plugins.index.AsyncIndexInfoService,org.apache.jackrabbit.oak.stats.Clock)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="lock(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.plugins.index.importer.SimpleToken" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="unlock(org.apache.jackrabbit.oak.plugins.index.importer.SimpleToken)" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncLaneSwitcher" delta="added">
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getTempLaneName(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNone(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="revertSwitch(org.apache.jackrabbit.oak.spi.state.NodeBuilder,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
        </method>
        <method name="switchLane(org.apache.jackrabbit.oak.spi.state.NodeBuilder,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.ClusterNodeStoreLock" delta="added">
        <implements name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.stats.Clock)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isLocked(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="lock(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.plugins.index.importer.ClusteredLockToken" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="unlock(org.apache.jackrabbit.oak.plugins.index.importer.ClusteredLockToken)" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.IndexDefinitionUpdater" delta="added">
        <field name="java.lang.String INDEX_DEFINITIONS_JSON" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="index-definitions.json" delta="added"/>
        </field>
        <method name="&lt;init&gt;(java.io.File)" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String)" delta="added"/>
        <method name="apply(org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="added"/>
        <method name="apply(org.apache.jackrabbit.oak.spi.state.NodeBuilder,java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeBuilder" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getIndexPaths()" delta="added">
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getIndexState(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.IndexImporter" delta="added">
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeStore,java.io.File,org.apache.jackrabbit.oak.plugins.index.IndexEditorProvider,org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock)" delta="added"/>
        <method name="addImporterProvider(org.apache.jackrabbit.oak.plugins.index.importer.IndexImporterProvider)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="importIndex()" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.importer.IndexerInfo" delta="added">
        <field name="java.lang.String INDEXER_META" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="indexer-info.properties" delta="added"/>
        </field>
        <field name="java.lang.String INDEX_METADATA_FILE_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="index-details.txt" delta="added"/>
        </field>
        <field name="java.lang.String PROP_INDEX_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="indexPath" delta="added"/>
        </field>
        <field name="java.lang.String checkpoint" delta="added">
          <access name="final" delta="added"/>
        </field>
        <method name="&lt;init&gt;(java.io.File,java.lang.String)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="fromDirectory(java.io.File)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.index.importer.IndexerInfo" delta="added"/>
        </method>
        <method name="getIndexes()" delta="added">
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.io.File;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="save()" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock" delta="added">
        <access name="abstract" delta="added"/>
        <field name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock NOOP_LOCK" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="lock(Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="T" delta="added"/>
        </method>
        <method name="unlock(TT;)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.index.importer.AsyncIndexerLock$LockToken" delta="added">
        <access name="abstract" delta="added"/>
        <access name="static" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.index.importer.IndexImporterProvider" delta="added">
        <access name="abstract" delta="added"/>
        <method name="getType()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="importIndex(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeBuilder,java.io.File)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.strategy" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>com.google.common.base,javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.query,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategy" delta="added">
        <implements name="org.apache.jackrabbit.oak.plugins.index.property.strategy.IndexStoreStrategy" delta="added"/>
        <field name="int TRAVERSING_WARN" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String)" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String,java.lang.String,boolean)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/query/Filter;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getIndexNodeName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="query(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="query(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/String;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="update(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.property.strategy.FilteringIndexStoreStrategy" delta="added">
        <implements name="org.apache.jackrabbit.oak.plugins.index.property.strategy.IndexStoreStrategy" delta="added"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/plugins/index/property/strategy/IndexStoreStrategy;Lcom/google/common/base/Predicate&lt;Ljava/lang/String;&gt;;)" delta="added"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/plugins/index/property/strategy/IndexStoreStrategy;Lcom/google/common/base/Predicate&lt;Ljava/lang/String;&gt;;Z)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/query/Filter;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getIndexNodeName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="query(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="update(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.property.strategy.IndexEntry" delta="added">
        <access name="final" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getPath()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPropertyValue()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.index.property.strategy.UniqueEntryStoreStrategy" delta="added">
        <implements name="org.apache.jackrabbit.oak.plugins.index.property.strategy.IndexStoreStrategy" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="&lt;init&gt;(Ljava/lang/String;Ljava/util/function/Consumer&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="&lt;init&gt;(java.lang.String)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/query/Filter;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getIndexNodeName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="query(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="queryEntries(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.Iterable&lt;Lorg.apache.jackrabbit.oak.plugins.index.property.strategy.IndexEntry;&gt;" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="update(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.plugins.index.property.strategy.IndexStoreStrategy" delta="added">
        <access name="abstract" delta="added"/>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/query/Filter;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="count(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;I)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="exists(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="getIndexNodeName()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="query(Lorg/apache/jackrabbit/oak/spi/query/Filter;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="update(Lcom/google/common/base/Supplier&lt;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;&gt;;Ljava/lang/String;Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeBuilder;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.migration" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.migration.AbstractDecoratedNodeState" delta="added">
        <access name="abstract" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.spi.state.AbstractNodeState" delta="added"/>
        <field name="org.apache.jackrabbit.oak.spi.state.NodeState delegate" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="builder()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeBuilder" delta="added"/>
        </method>
        <method name="compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="decorateChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="decorateProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="fixChildOrderPropertyState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="protected" delta="added"/>
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="getChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getChildNodeEntries()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.spi.state.ChildNodeEntry;&gt;" delta="added"/>
        </method>
        <method name="getDelegate()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getNewPropertyStates()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperties()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperty(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="hasChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.FilteringNodeState" delta="added">
        <extends name="org.apache.jackrabbit.oak.plugins.migration.AbstractDecoratedNodeState" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.spi.state.AbstractNodeState" delta="added"/>
        <field name="java.util.Set ALL" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Set NONE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="org.apache.jackrabbit.oak.spi.state.NodeState delegate" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="builder()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeBuilder" delta="added"/>
        </method>
        <method name="compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="decorateChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="decorateProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="getChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getChildNodeEntries()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.spi.state.ChildNodeEntry;&gt;" delta="added"/>
        </method>
        <method name="getDelegate()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getNewPropertyStates()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperties()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperty(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="hasChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="wrap(Ljava/lang/String;Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.NameFilteringNodeState" delta="added">
        <extends name="org.apache.jackrabbit.oak.plugins.migration.AbstractDecoratedNodeState" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.spi.state.AbstractNodeState" delta="added"/>
        <field name="org.apache.jackrabbit.oak.spi.state.NodeState delegate" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="builder()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeBuilder" delta="added"/>
        </method>
        <method name="compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="decorateChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="decorateProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="getChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getChildNodeEntries()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.spi.state.ChildNodeEntry;&gt;" delta="added"/>
        </method>
        <method name="getDelegate()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getNewPropertyStates()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperties()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperty(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="hasChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isNameTooLong(java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="wrap(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier" delta="added">
        <method name="builder()" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="copyNodeStore(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="copyProperties(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="added">
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added">
        <access name="static" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="copy(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="copy(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exclude(Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="exclude(java.lang.String[])" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="excludeFragments(Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="excludeFragments(java.lang.String[])" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="include(Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="include(java.lang.String[])" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="merge(Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="merge(java.lang.String[])" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="supportFragment(Ljava/util/Set&lt;Ljava/lang/String;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="supportFragment(java.lang.String[])" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.migration.NodeStateCopier$Builder" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.migration.report" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.plugins.migration,org.apache.jackrabbit.oak.spi.state,org.slf4j</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.migration.report.LoggingReporter" delta="added">
        <extends name="org.apache.jackrabbit.oak.plugins.migration.report.PeriodicReporter" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.plugins.migration.report.Reporter" delta="added"/>
        <method name="&lt;init&gt;(org.slf4j.Logger,int,int)" delta="added"/>
        <method name="&lt;init&gt;(org.slf4j.Logger,java.lang.String,int,int)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="reportNode(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="final" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportPeriodicNode(long,org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportPeriodicProperty(long,org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState,java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportProperty(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState,java.lang.String)" delta="added">
          <access name="final" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reset()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="skipNodeState(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.report.PeriodicReporter" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.plugins.migration.report.Reporter" delta="added"/>
        <method name="&lt;init&gt;(int,int)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="reportNode(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="final" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportPeriodicNode(long,org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportPeriodicProperty(long,org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState,java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportProperty(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState,java.lang.String)" delta="added">
          <access name="final" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reset()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="skipNodeState(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState" delta="added">
        <extends name="org.apache.jackrabbit.oak.plugins.migration.AbstractDecoratedNodeState" delta="added"/>
        <extends name="org.apache.jackrabbit.oak.spi.state.AbstractNodeState" delta="added"/>
        <field name="org.apache.jackrabbit.oak.spi.state.NodeState delegate" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="builder()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeBuilder" delta="added"/>
        </method>
        <method name="compareAgainstBaseState(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeStateDiff)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="decorateChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="decorateProperty(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="exists()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="getChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getChildNodeEntries()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.spi.state.ChildNodeEntry;&gt;" delta="added"/>
        </method>
        <method name="getDelegate()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="getNewPropertyStates()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getPath()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getProperties()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;+Lorg.apache.jackrabbit.oak.api.PropertyState;&gt;" delta="added"/>
        </method>
        <method name="getProperty(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="hasChildNode(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideChild(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="hideProperty(java.lang.String)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="wrap(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.plugins.migration.report.Reporter)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.plugins.migration.report.Reporter" delta="added">
        <access name="abstract" delta="added"/>
        <method name="reportNode(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="reportProperty(org.apache.jackrabbit.oak.plugins.migration.report.ReportingNodeState,java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </interface>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:07Z" bundleName="oak-exercise" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:02Z" bundleName="oak-http" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:02Z" bundleName="oak-jcr" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.jcr.observation.filter" delta="changed">
      <mismatch>false</mismatch>
      <newerVersion>1.0.1</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <suggestedVersion>1.0.1</suggestedVersion>
      <attributes>
        <version>1.0.1</version>
        <uses>org.apache.jackrabbit.api.observation</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.jcr.observation.filter.OakEventFilter" delta="changed">
        <annotated name="aQute.bnd.annotation.ConsumerType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ConsumerType" delta="added"/>
      </class>
      <version name="1.0.0" delta="removed"/>
      <version name="1.0.1" delta="added"/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:03Z" bundleName="oak-lucene" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.plugins.index.lucene.score" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.3.1</newerVersion>
      <olderVersion>1.3.1</olderVersion>
      <suggestedVersion>1.3.1</suggestedVersion>
      <attributes>
        <version>1.3.1</version>
        <uses>org.apache.lucene.queries,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.lucene.spi" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.spi.state,org.apache.lucene.analysis,org.apache.lucene.document,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util,org.apache.lucene.util.automaton</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ar" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.core,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.bg" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.br" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ca" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.charfilter" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.cjk" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ckb" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.cn" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.commongrams" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.compound" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.compound.hyphenation,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util,org.apache.lucene.util,org.xml.sax</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.compound.hyphenation" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.xml.sax,org.xml.sax.helpers</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.core" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.cz" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.da" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.de" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.el" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.en" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.es" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.eu" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.fa" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.fi" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.fr" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ga" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.gl" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.pt,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.hi" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.hu" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.hunspell" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.hy" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.id" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.in" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.it" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.lv" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.miscellaneous" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util,org.apache.lucene.util.fst</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ngram" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.nl" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.no" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.path" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.pattern" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.charfilter,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.payloads" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.position" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.pt" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.query" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.index,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.reverse" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ro" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.ru" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.shingle" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.sinks" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.snowball" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.standard" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.tokenattributes,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.standard.std31" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.standard.std34" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.standard.std36" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.standard.std40" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.standard,org.apache.lucene.analysis.tokenattributes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.sv" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.synonym" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util,org.apache.lucene.util.fst</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.th" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.tokenattributes" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.tr" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.util" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.analysis.wikipedia" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.automaton</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.compressing" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene3x" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene40" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene41" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.codecs.compressing,org.apache.lucene.index,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene42" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.codecs.compressing,org.apache.lucene.index</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene45" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.packed</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.lucene46" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.codecs.perfield" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.codecs,org.apache.lucene.index</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.collation" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.collation.tokenattributes" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis.tokenattributes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.document" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.index,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.facet.sortedset,org.apache.lucene.facet.taxonomy,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet.range" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.facet,org.apache.lucene.queries.function,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet.sortedset" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.facet,org.apache.lucene.index</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet.taxonomy" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.facet,org.apache.lucene.facet.taxonomy.directory,org.apache.lucene.index,org.apache.lucene.queries.function,org.apache.lucene.search,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet.taxonomy.directory" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.facet.taxonomy,org.apache.lucene.facet.taxonomy.writercache,org.apache.lucene.index,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.facet.taxonomy.writercache" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.facet.taxonomy</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.index" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.codecs,org.apache.lucene.document,org.apache.lucene.search,org.apache.lucene.search.similarities,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.automaton</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.index.memory" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.index.sorter" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.misc" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search.similarities,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queries" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.queries.function,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queries.function" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.util,org.apache.lucene.util.mutable</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queries.function.docvalues" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.queries.function,org.apache.lucene.util,org.apache.lucene.util.mutable</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queries.function.valuesource" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.queries.function,org.apache.lucene.queries.function.docvalues,org.apache.lucene.search,org.apache.lucene.util,org.apache.lucene.util.mutable</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queries.mlt" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.similarities,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.analyzing" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.queryparser.classic,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.classic" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.queryparser.flexible.standard,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.complexPhrase" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.index,org.apache.lucene.queryparser.classic,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.ext" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.queryparser.classic,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core.builders,org.apache.lucene.queryparser.flexible.core.config,org.apache.lucene.queryparser.flexible.core.parser,org.apache.lucene.queryparser.flexible.core.processors,org.apache.lucene.queryparser.flexible.messages</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.builders" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.nodes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.config" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.messages" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.messages</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.nodes" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core.parser</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.parser" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.nodes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.processors" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.config,org.apache.lucene.queryparser.flexible.core.nodes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.core.util" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core.nodes</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.messages" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.precedence" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.queryparser.flexible.standard</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.precedence.processors" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.config,org.apache.lucene.queryparser.flexible.core.nodes,org.apache.lucene.queryparser.flexible.core.processors,org.apache.lucene.queryparser.flexible.standard.processors</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.document,org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.standard.config,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard.builders" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.builders,org.apache.lucene.queryparser.flexible.core.nodes,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard.config" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.document,org.apache.lucene.queryparser.flexible.core.config,org.apache.lucene.search</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard.nodes" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.nodes,org.apache.lucene.queryparser.flexible.core.parser,org.apache.lucene.queryparser.flexible.standard.config,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard.parser" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.nodes,org.apache.lucene.queryparser.flexible.core.parser,org.apache.lucene.queryparser.flexible.core.util,org.apache.lucene.queryparser.flexible.messages</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.flexible.standard.processors" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.flexible.core,org.apache.lucene.queryparser.flexible.core.config,org.apache.lucene.queryparser.flexible.core.nodes,org.apache.lucene.queryparser.flexible.core.processors</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.simple" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.surround.parser" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.queryparser.surround.query</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.surround.query" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.spans</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.xml" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>javax.xml.parsers,javax.xml.transform,org.apache.lucene.analysis,org.apache.lucene.queryparser.classic,org.apache.lucene.search,org.w3c.dom,org.xml.sax</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.queryparser.xml.builders" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.queryparser.classic,org.apache.lucene.queryparser.xml,org.apache.lucene.search,org.apache.lucene.search.spans,org.w3c.dom</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.search.similarities,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.automaton,org.apache.lucene.util.packed</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.highlight" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.spans</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.payloads" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.similarities,org.apache.lucene.search.spans,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.postingshighlight" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.similarities" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.spans" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.similarities,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.spell" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search.suggest,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.suggest" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.queries.function,org.apache.lucene.search.spell,org.apache.lucene.search.suggest.fst,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.suggest.analyzing" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.analysis.util,org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.suggest,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.automaton,org.apache.lucene.util.fst</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.suggest.fst" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.search.suggest,org.apache.lucene.store,org.apache.lucene.util,org.apache.lucene.util.fst</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.suggest.jaspell" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.search.suggest,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.suggest.tst" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.search.suggest,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.search.vectorhighlight" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.document,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.search.highlight</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.store" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
      </attributes>
    </package>
    <package name="org.apache.lucene.util" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.analysis,org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.store</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.util.automaton" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.util.fst" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.util.mutable" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.util</uses>
      </attributes>
    </package>
    <package name="org.apache.lucene.util.packed" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.7.1</newerVersion>
      <olderVersion>4.7.1</olderVersion>
      <suggestedVersion>4.7.1</suggestedVersion>
      <attributes>
        <version>4.7.1</version>
        <uses>org.apache.lucene.index,org.apache.lucene.search,org.apache.lucene.store,org.apache.lucene.util</uses>
      </attributes>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:58Z" bundleName="oak-query-spi" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0</version>
        <uses>javax.annotation,javax.jcr.query</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.query.fulltext,org.apache.jackrabbit.oak.spi.state,org.apache.jackrabbit.oak.spi.whiteboard</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.query.Cursors" delta="removed">
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="newAncestorCursor(org.apache.jackrabbit.oak.spi.query.Cursor,int,org.apache.jackrabbit.oak.query.QueryEngineSettings)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="newConcatCursor(Ljava/util/List&lt;Lorg/apache/jackrabbit/oak/spi/query/Cursor;&gt;;Lorg/apache/jackrabbit/oak/query/QueryEngineSettings;)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="newIntersectionCursor(org.apache.jackrabbit.oak.spi.query.Cursor,org.apache.jackrabbit.oak.spi.query.Cursor,org.apache.jackrabbit.oak.query.QueryEngineSettings)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="newPathCursor(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;Lorg/apache/jackrabbit/oak/query/QueryEngineSettings;)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="newPathCursorDistinct(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;Lorg/apache/jackrabbit/oak/query/QueryEngineSettings;)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="newTraversingCursor(org.apache.jackrabbit.oak.spi.query.Filter,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.Cursors$AbstractCursor" delta="removed">
        <access name="abstract" delta="removed"/>
        <access name="static" delta="removed"/>
        <implements name="java.util.Iterator" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        <method name="&lt;init&gt;()" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="forEachRemaining(Ljava/util/function/Consumer&lt;-TE;&gt;;)" delta="removed"/>
        <method name="getSize(org.apache.jackrabbit.oak.api.Result$SizePrecision,long)" delta="removed">
          <return name="long" delta="removed"/>
        </method>
        <method name="hasNext()" delta="removed">
          <access name="abstract" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="next()" delta="removed">
          <access name="abstract" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.IndexRow" delta="removed"/>
        </method>
        <method name="remove()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.Cursors$PathCursor" delta="removed">
        <access name="static" delta="removed"/>
        <extends name="org.apache.jackrabbit.oak.spi.query.Cursors$AbstractCursor" delta="removed"/>
        <implements name="java.util.Iterator" delta="removed"/>
        <implements name="org.apache.jackrabbit.oak.spi.query.Cursor" delta="removed"/>
        <method name="&lt;init&gt;(Ljava/util/Iterator&lt;Ljava/lang/String;&gt;;ZLorg/apache/jackrabbit/oak/query/QueryEngineSettings;)" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="forEachRemaining(Ljava/util/function/Consumer&lt;-TE;&gt;;)" delta="removed"/>
        <method name="getSize(org.apache.jackrabbit.oak.api.Result$SizePrecision,long)" delta="removed">
          <return name="long" delta="removed"/>
        </method>
        <method name="hasNext()" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="next()" delta="removed">
          <return name="org.apache.jackrabbit.oak.spi.query.IndexRow" delta="removed"/>
        </method>
        <method name="remove()" delta="removed"/>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.PropertyStateValue" delta="removed">
        <implements name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.api.PropertyState)" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="compareTo(org.apache.jackrabbit.oak.api.PropertyValue)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="int" delta="removed"/>
        </method>
        <method name="count()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getType()" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Type&lt;*&gt;" delta="removed"/>
        </method>
        <method name="getValue(Lorg/apache/jackrabbit/oak/api/Type&lt;TT;&gt;;)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
        </method>
        <method name="getValue(Lorg/apache/jackrabbit/oak/api/Type&lt;TT;&gt;;I)" delta="removed">
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="isArray()" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="size()" delta="removed">
          <return name="long" delta="removed"/>
        </method>
        <method name="size(int)" delta="removed">
          <return name="long" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="unwrap()" delta="removed">
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.PropertyValues" delta="removed">
        <access name="final" delta="removed"/>
        <method name="canConvert(int,int)" delta="removed">
          <access name="static" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="convert(org.apache.jackrabbit.oak.api.PropertyValue,int,org.apache.jackrabbit.oak.namepath.NamePathMapper)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="create(org.apache.jackrabbit.oak.api.PropertyState)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="create(org.apache.jackrabbit.oak.api.PropertyValue)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="getOakPath(java.lang.String,org.apache.jackrabbit.oak.namepath.NamePathMapper)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.CheckForNull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="java.lang.String" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="match(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.api.PropertyValue)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="match(org.apache.jackrabbit.oak.api.PropertyValue,org.apache.jackrabbit.oak.api.PropertyState)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="match(org.apache.jackrabbit.oak.api.PropertyValue,org.apache.jackrabbit.oak.api.PropertyValue)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="newBinary(byte[])" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newBinary(org.apache.jackrabbit.oak.api.Blob)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newBoolean(boolean)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newDate(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newDecimal(java.math.BigDecimal)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newDouble(java.lang.Double)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newLong(java.lang.Long)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newName(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newName(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newPath(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newReference(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newString(Ljava/lang/Iterable&lt;Ljava/lang/String;&gt;;)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newString(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newUri(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="newWeakReference(java.lang.String)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyValue" delta="removed"/>
        </method>
        <method name="notMatch(org.apache.jackrabbit.oak.api.PropertyValue,org.apache.jackrabbit.oak.api.PropertyValue)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="boolean" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.QueryConstants" delta="minor">
        <field name="java.lang.String JCR_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:path" delta="added"/>
        </field>
        <field name="java.lang.String JCR_SCORE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="jcr:score" delta="added"/>
        </field>
        <field name="java.lang.String OAK_SCORE_EXPLANATION" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak:scoreExplanation" delta="added"/>
        </field>
        <field name="java.lang.String REP_EXCERPT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:excerpt" delta="added"/>
        </field>
        <field name="java.lang.String REP_FACET" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:facet" delta="added"/>
        </field>
        <field name="java.lang.String REP_SPELLCHECK" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:spellcheck()" delta="added"/>
        </field>
        <field name="java.lang.String REP_SUGGEST" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:suggest()" delta="added"/>
        </field>
        <field name="java.lang.String SEARCH_ROOT_PATH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="/jcr:root" delta="added"/>
        </field>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder" delta="minor">
        <field name="boolean supportsPathRestriction" delta="added">
          <access name="protected" delta="added"/>
        </field>
        <method name="setSupportsPathRestriction(boolean)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan$Builder" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.WhiteboardIndexProvider" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.whiteboard.AbstractServiceTracker" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.spi.query.QueryIndexProvider" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="getQueryIndexes(Lorg/apache/jackrabbit/oak/spi/state/NodeState;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;+Lorg.apache.jackrabbit.oak.spi.query.QueryIndex;&gt;" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.query.Filter" delta="major">
        <field name="org.apache.jackrabbit.oak.spi.query.Filter EMPTY_FILTER" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="getFullTextConstraint()" delta="major">
          <return name="org.apache.jackrabbit.oak.query.fulltext.FullTextExpression" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="getQueryEngineSettings()" delta="removed">
          <access name="abstract" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.query.QueryEngineSettings" delta="removed"/>
        </method>
        <method name="getQueryLimits()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.query.QueryLimits" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryIndex$AdvanceFulltextQueryIndex" delta="major">
        <method name="getNodeAggregator()" delta="major">
          <return name="org.apache.jackrabbit.oak.plugins.index.aggregate.NodeAggregator" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryIndex$FulltextQueryIndex" delta="major">
        <method name="getNodeAggregator()" delta="major">
          <return name="org.apache.jackrabbit.oak.plugins.index.aggregate.NodeAggregator" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryIndex$IndexPlan" delta="minor">
        <method name="getSupportsPathRestriction()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <annotated name="aQute.bnd.annotation.ProviderType" delta="removed"/>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryIndex$NodeAggregator" delta="added">
        <access name="abstract" delta="added"/>
        <access name="static" delta="added"/>
        <method name="getParents(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Ljava/lang/String;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.util.Iterator&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryIndexProviderAware" delta="added">
        <access name="abstract" delta="added"/>
        <method name="setQueryIndexProvider(org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.query.QueryLimits" delta="added">
        <access name="abstract" delta="added"/>
        <method name="getFailTraversal()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="getFullTextComparisonWithoutIndex()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="getLimitInMemory()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="getLimitReads()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="long" delta="added"/>
        </method>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query.fulltext" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextAnd" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        <field name="java.util.List list" delta="added">
          <access name="final" delta="added"/>
        </field>
        <method name="&lt;init&gt;(Ljava/util/List&lt;Lorg/apache/jackrabbit/oak/spi/query/fulltext/FullTextExpression;&gt;;)" delta="added"/>
        <method name="accept(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="evaluate(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getPrecedence()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNot()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="simplify()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextContains" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String,java.lang.String,org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression)" delta="added"/>
        <method name="accept(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="evaluate(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getBase()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="getPrecedence()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="getPropertyName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getRawText()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNot()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added">
        <access name="abstract" delta="added"/>
        <field name="int PRECEDENCE_AND" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="2" delta="added"/>
        </field>
        <field name="int PRECEDENCE_OR" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="1" delta="added"/>
        </field>
        <field name="int PRECEDENCE_TERM" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="3" delta="added"/>
        </field>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="accept(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="evaluate(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getPrecedence()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="int" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNot()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextOr" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        <field name="java.util.List list" delta="added">
          <access name="final" delta="added"/>
        </field>
        <method name="&lt;init&gt;(Ljava/util/List&lt;Lorg/apache/jackrabbit/oak/spi/query/fulltext/FullTextExpression;&gt;;)" delta="added"/>
        <method name="accept(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="evaluate(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getPrecedence()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNot()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="simplify()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextParser" delta="added">
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="parse(java.lang.String,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextTerm" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String,java.lang.String,boolean,boolean,java.lang.String)" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String,org.apache.jackrabbit.oak.spi.query.fulltext.FullTextTerm)" delta="added"/>
        <method name="accept(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="evaluate(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getBoost()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getPrecedence()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="getPropertyName()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getText()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isFullTextCharacter(char)" delta="added">
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isNot()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="simplify()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextExpression" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor$FullTextVisitorBase" delta="added">
        <access name="abstract" delta="added"/>
        <access name="static" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextAnd)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextContains)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextOr)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextTerm)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.query.fulltext.LikePattern" delta="added">
        <method name="&lt;init&gt;(java.lang.String)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getLowerBound()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getUpperBound()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="matches(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.query.fulltext.FullTextVisitor" delta="added">
        <access name="abstract" delta="added"/>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextAnd)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextContains)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextOr)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="visit(org.apache.jackrabbit.oak.spi.query.fulltext.FullTextTerm)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
      </interface>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:59Z" bundleName="oak-security-spi" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>3.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <suggestedVersion>3.0.0</suggestedVersion>
      <attributes>
        <version>3.0.0</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.commit,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.tree.RootFactory" delta="removed">
        <access name="final" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="createReadOnlyRoot(org.apache.jackrabbit.oak.api.Root)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="removed"/>
        </method>
        <method name="createReadOnlyRoot(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="removed"/>
        </method>
        <method name="createSystemRoot(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.commit.CommitHook,java.lang.String,org.apache.jackrabbit.oak.spi.security.SecurityProvider,org.apache.jackrabbit.oak.query.QueryEngineSettings,org.apache.jackrabbit.oak.spi.query.QueryIndexProvider)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <annotated name="javax.annotation.Nullable" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.tree.TreeFactory" delta="removed">
        <access name="final" delta="removed"/>
        <method name="clone()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="createReadOnlyTree(org.apache.jackrabbit.oak.api.Tree,java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="removed"/>
        </method>
        <method name="createReadOnlyTree(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="removed"/>
        </method>
        <method name="createTree(org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="removed">
          <access name="static" delta="removed"/>
          <annotated name="javax.annotation.Nonnull" delta="removed"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="removed"/>
        </method>
        <method name="equals(java.lang.Object)" delta="removed">
          <return name="boolean" delta="removed"/>
        </method>
        <method name="finalize()" delta="removed">
          <access name="protected" delta="removed"/>
        </method>
        <method name="hashCode()" delta="removed">
          <return name="int" delta="removed"/>
        </method>
        <method name="toString()" delta="removed">
          <return name="java.lang.String" delta="removed"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.plugins.tree.TreeUtil" delta="added">
        <access name="final" delta="added"/>
        <method name="addChild(org.apache.jackrabbit.oak.api.Tree,java.lang.String,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
        <method name="addChild(org.apache.jackrabbit.oak.api.Tree,java.lang.String,java.lang.String,org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
        <method name="addMixin(org.apache.jackrabbit.oak.api.Tree,java.lang.String,org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="autoCreateItems(org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="autoCreateProperty(java.lang.String,org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.PropertyState" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="findDefaultPrimaryType(org.apache.jackrabbit.oak.api.Tree,boolean)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getBoolean(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="getDefaultChildType(org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getEffectiveType(Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/oak/api/Tree;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.api.Tree;&gt;" delta="added"/>
        </method>
        <method name="getLong(org.apache.jackrabbit.oak.api.Tree,java.lang.String,long)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="long" delta="added"/>
        </method>
        <method name="getName(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getNames(Lorg/apache/jackrabbit/oak/api/Tree;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getOrAddChild(org.apache.jackrabbit.oak.api.Tree,java.lang.String,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
        <method name="getPrimaryTypeName(org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getString(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getString(org.apache.jackrabbit.oak.api.Tree,java.lang.String,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getStrings(Lorg/apache/jackrabbit/oak/api/Tree;Ljava/lang/String;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="getTree(org.apache.jackrabbit.oak.api.Tree,java.lang.String)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="isNodeType(org.apache.jackrabbit.oak.api.Tree,java.lang.String,org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="static" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="isReadOnlyTree(org.apache.jackrabbit.oak.api.Tree)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.plugins.tree.ReadOnly" delta="added">
        <access name="abstract" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.tree.RootProvider" delta="added">
        <access name="abstract" delta="added"/>
        <method name="createReadOnlyRoot(org.apache.jackrabbit.oak.api.Root)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="added"/>
        </method>
        <method name="createReadOnlyRoot(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="added"/>
        </method>
        <method name="createSystemRoot(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.commit.CommitHook)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Root" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.tree.TreeConstants" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String OAK_CHILD_ORDER" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name=":childOrder" delta="added"/>
        </field>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.tree.TreeProvider" delta="added">
        <access name="abstract" delta="added"/>
        <method name="createReadOnlyTree(org.apache.jackrabbit.oak.api.Tree,java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
        <method name="createReadOnlyTree(org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.api.Tree" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.plugins.tree.TreeTypeAware" delta="added">
        <access name="abstract" delta="added"/>
        <method name="getType()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.TreeType" delta="added"/>
        </method>
        <method name="setType(org.apache.jackrabbit.oak.plugins.tree.TreeType)" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </interface>
      <version name="2.0.0" delta="removed"/>
      <version name="3.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>2.2.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <suggestedVersion>2.2.0</suggestedVersion>
      <attributes>
        <version>2.2.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.plugins.tree,org.apache.jackrabbit.oak.spi.commit,org.apache.jackrabbit.oak.spi.lifecycle,org.apache.jackrabbit.oak.spi.xml</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.CompositeConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
        <method name="getRootProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.RootProvider" delta="added"/>
        </method>
        <method name="getTreeProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.TreeProvider" delta="added"/>
        </method>
        <method name="setRootProvider(org.apache.jackrabbit.oak.plugins.tree.RootProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="setTreeProvider(org.apache.jackrabbit.oak.plugins.tree.TreeProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.ConfigurationBase" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
        <method name="getRootProvider()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.RootProvider" delta="added"/>
        </method>
        <method name="getTreeProvider()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.TreeProvider" delta="added"/>
        </method>
        <method name="setRootProvider(org.apache.jackrabbit.oak.plugins.tree.RootProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="setTreeProvider(org.apache.jackrabbit.oak.plugins.tree.TreeProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.RegistrationConstants" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String OAK_SECURITY_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak.security.name" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.SecurityConfiguration$Default" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.security.SecurityConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.security.SecurityProvider" delta="changed">
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="2.1.0" delta="removed"/>
      <version name="2.2.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.2.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <suggestedVersion>1.2.0</suggestedVersion>
      <attributes>
        <version>1.2.0</version>
        <uses>javax.annotation,javax.jcr,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.principal,org.apache.jackrabbit.oak.spi.whiteboard</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.authentication.AbstractLoginModule" delta="minor">
        <method name="getPrincipals(Ljava/security/Principal;)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Set&lt;+Ljava.security.Principal;&gt;" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.authentication.OpenAuthenticationConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.security.authentication.Authentication" delta="minor">
        <method name="getUserId()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getUserPrincipal()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <return name="java.security.Principal" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.security.authentication.AuthenticationConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <version name="1.1.0" delta="removed"/>
      <version name="1.2.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0</version>
        <uses>javax.annotation,javax.jcr,javax.security.auth.callback,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.authentication.token,org.apache.jackrabbit.oak.spi.security.principal,org.apache.jackrabbit.oak.spi.whiteboard</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>2.1.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <suggestedVersion>2.1.0</suggestedVersion>
      <attributes>
        <version>2.1.0</version>
        <uses>com.google.common.collect,javax.annotation,javax.jcr</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.authentication.credentials.AbstractCredentials" delta="added">
        <access name="abstract" delta="added"/>
        <implements name="javax.jcr.Credentials" delta="added"/>
        <field name="java.lang.String userId" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <field name="java.util.Map attributes" delta="added">
          <access name="final" delta="added"/>
          <access name="protected" delta="added"/>
        </field>
        <method name="&lt;init&gt;(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttribute(java.lang.String)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="getAttributes()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.Object;&gt;" delta="added"/>
        </method>
        <method name="getUserId()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="removeAttribute(java.lang.String)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="setAttribute(java.lang.String,java.lang.Object)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nullable" delta="added"/>
        </method>
        <method name="setAttributes(Ljava/util/Map&lt;Ljava/lang/String;Ljava/lang/Object;&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.authentication.credentials.CompositeCredentialsSupport" delta="added">
        <access name="final" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.spi.security.authentication.credentials.CredentialsSupport" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getAttributes(Ljavax/jcr/Credentials;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Map&lt;Ljava.lang.String;*&gt;" delta="added"/>
        </method>
        <method name="getCredentialClasses()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.Class;&gt;" delta="added"/>
        </method>
        <method name="getUserId(javax.jcr.Credentials)" delta="added">
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="newInstance(Ljava/util/function/Supplier&lt;Ljava/util/Collection&lt;Lorg/apache/jackrabbit/oak/spi/security/authentication/credentials/CredentialsSupport;&gt;;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.security.authentication.credentials.CredentialsSupport" delta="added"/>
        </method>
        <method name="setAttributes(Ljavax/jcr/Credentials;Ljava/util/Map&lt;Ljava/lang/String;*&gt;;)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <version name="2.0.0" delta="removed"/>
      <version name="2.1.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.5.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <suggestedVersion>1.5.0</suggestedVersion>
      <attributes>
        <version>1.5.0</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.api.security.authentication.token,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.security</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.authentication.token.CompositeTokenConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
        <method name="getRootProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.RootProvider" delta="added"/>
        </method>
        <method name="getTreeProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.TreeProvider" delta="added"/>
        </method>
        <method name="setRootProvider(org.apache.jackrabbit.oak.plugins.tree.RootProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="setTreeProvider(org.apache.jackrabbit.oak.plugins.tree.TreeProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.security.authentication.token.TokenConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.security.authentication.token.TokenConstants" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String TOKENS_NODE_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name=".tokens" delta="added"/>
        </field>
        <field name="java.lang.String TOKENS_NT_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:Unstructured" delta="added"/>
        </field>
        <field name="java.lang.String TOKEN_ATTRIBUTE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name=".token" delta="added"/>
        </field>
        <field name="java.lang.String TOKEN_ATTRIBUTE_EXPIRY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:token.exp" delta="added"/>
        </field>
        <field name="java.lang.String TOKEN_ATTRIBUTE_KEY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:token.key" delta="added"/>
        </field>
        <field name="java.lang.String TOKEN_NT_NAME" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="rep:Token" delta="added"/>
        </field>
        <field name="java.util.Set RESERVED_ATTRIBUTES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <field name="java.util.Set TOKEN_PROPERTY_NAMES" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
      </interface>
      <interface name="org.apache.jackrabbit.oak.spi.security.authentication.token.TokenInfo" delta="changed">
        <method name="matches(org.apache.jackrabbit.api.security.authentication.token.TokenCredentials)" delta="changed">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </interface>
      <version name="1.4.0" delta="removed"/>
      <version name="1.5.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.1.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <suggestedVersion>1.1.0</suggestedVersion>
      <attributes>
        <version>1.1.0</version>
        <uses>javax.annotation,javax.jcr.security,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.authorization.permission,org.apache.jackrabbit.oak.spi.security.authorization.restriction</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.authorization.OpenAuthorizationConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.security.authorization.AuthorizationConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <version name="1.0.0" delta="removed"/>
      <version name="1.1.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.5.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <suggestedVersion>1.5.0</suggestedVersion>
      <attributes>
        <version>1.5.0</version>
        <uses>javax.annotation,javax.jcr,javax.jcr.security,org.apache.jackrabbit.api.security,org.apache.jackrabbit.api.security.authorization,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.authorization,org.apache.jackrabbit.oak.spi.security.authorization.permission,org.apache.jackrabbit.oak.spi.security.authorization.restriction,org.apache.jackrabbit.oak.spi.security.privilege</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.AbstractAccessControlList" delta="minor">
        <method name="isMultiValueRestriction(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol.ImmutableACL" delta="minor">
        <method name="isMultiValueRestriction(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <version name="1.4.0" delta="removed"/>
      <version name="1.5.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>4.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <suggestedVersion>4.0.0</suggestedVersion>
      <attributes>
        <version>4.0.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.plugins.tree,org.apache.jackrabbit.oak.spi.security.privilege,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.1.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <suggestedVersion>1.1.0</suggestedVersion>
      <attributes>
        <version>1.1</version>
        <uses>javax.annotation,javax.jcr,javax.jcr.security,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.5.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <suggestedVersion>1.5.0</suggestedVersion>
      <attributes>
        <version>1.5.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.api.security.principal,org.apache.jackrabbit.commons.iterator,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.principal.CompositePrincipalConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
        <method name="getRootProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.RootProvider" delta="added"/>
        </method>
        <method name="getTreeProvider()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.plugins.tree.TreeProvider" delta="added"/>
        </method>
        <method name="setRootProvider(org.apache.jackrabbit.oak.plugins.tree.RootProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="setTreeProvider(org.apache.jackrabbit.oak.plugins.tree.TreeProvider)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.spi.security.principal.PrincipalConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <version name="1.4.0" delta="removed"/>
      <version name="1.5.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>1.2.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <suggestedVersion>1.2.0</suggestedVersion>
      <attributes>
        <version>1.2.0</version>
        <uses>javax.annotation,javax.jcr.security,org.apache.jackrabbit.api.security.authorization,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.security.privilege.PrivilegeConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <version name="1.1.0" delta="removed"/>
      <version name="1.2.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="minor">
      <mismatch>false</mismatch>
      <newerVersion>2.3.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <suggestedVersion>2.3.0</suggestedVersion>
      <attributes>
        <version>2.3.0</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.authentication,org.apache.jackrabbit.oak.spi.security.principal</uses>
      </attributes>
      <interface name="org.apache.jackrabbit.oak.spi.security.user.UserConfiguration" delta="minor">
        <method name="getConflictHandlers()" delta="added">
          <access name="abstract" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.util.List&lt;Lorg.apache.jackrabbit.oak.spi.commit.ThreeWayConflictHandler;&gt;" delta="added"/>
        </method>
      </interface>
      <version name="2.2.0" delta="removed"/>
      <version name="2.3.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="changed">
      <mismatch>false</mismatch>
      <newerVersion>1.1.1</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <suggestedVersion>1.1.1</suggestedVersion>
      <attributes>
        <version>1.1.1</version>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider" delta="changed">
        <annotated name="org.apache.felix.scr.annotations.Component" delta="removed">
          <property name="label='Apache Jackrabbit Oak AuthorizableActionProvider'" delta="removed"/>
          <property name="metatype=true" delta="removed"/>
        </annotated>
        <annotated name="org.apache.felix.scr.annotations.Properties" delta="removed">
          <annotated name="org.apache.felix.scr.annotations.Property" delta="removed">
            <annotated name="org.apache.felix.scr.annotations.PropertyOption" delta="removed">
              <property name="name='org.apache.jackrabbit.oak.spi.security.user.action.AccessControlAction'" delta="removed"/>
              <property name="value='AccessControlAction'" delta="removed"/>
            </annotated>
            <property name="cardinality=4" delta="removed"/>
            <property name="description='The set of actions that is supported by this provider implementation.'" delta="removed"/>
            <property name="label='Authorizable Actions'" delta="removed"/>
            <property name="name='enabledActions'" delta="removed"/>
          </annotated>
        </annotated>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="removed">
          <property name="value.0=org.apache.jackrabbit.oak.spi.security.user.action.AuthorizableActionProvider" delta="removed"/>
        </annotated>
        <annotated name="org.osgi.service.component.annotations.Component" delta="added">
          <property name="property.0='oak.security.name=org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider'" delta="added"/>
          <property name="service.0=org.apache.jackrabbit.oak.spi.security.user.action.AuthorizableActionProvider" delta="added"/>
        </annotated>
        <annotated name="org.osgi.service.metatype.annotations.Designate" delta="added">
          <property name="ocd=org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider$Configuration" delta="added"/>
        </annotated>
      </class>
      <version name="1.1.0" delta="removed"/>
      <version name="1.1.1" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>1.2.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <suggestedVersion>1.2.0</suggestedVersion>
      <attributes>
        <version>1.2.0</version>
        <uses>javax.annotation,org.apache.jackrabbit.api.security.user,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.spi.security,org.apache.jackrabbit.oak.spi.security.user</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="major">
      <mismatch>false</mismatch>
      <newerVersion>1.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>1.0.0</suggestedVersion>
      <attributes>
        <version>1.0.0</version>
        <uses>javax.annotation,javax.jcr,javax.jcr.nodetype,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath,org.apache.jackrabbit.oak.spi.security</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.xml.PropInfo" delta="major">
        <method name="getPropertyDef(org.apache.jackrabbit.oak.plugins.nodetype.EffectiveNodeType)" delta="removed">
          <return name="javax.jcr.nodetype.PropertyDefinition" delta="removed"/>
        </method>
        <method name="isUnknownMultiple()" delta="added">
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <version name="1.0.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:01Z" bundleName="oak-segment-tar" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:04Z" bundleName="oak-solr-core" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:05Z" bundleName="oak-solr-osgi" currentVersion="1.8.0" previousVersion="1.6.2"/>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:00Z" bundleName="oak-store-composite" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.composite" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.2.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.2.0</suggestedVersion>
      <attributes>
        <version>0.2.0</version>
        <uses>javax.annotation,javax.management.openmbean,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.commons.jmx,org.apache.jackrabbit.oak.composite.checks,org.apache.jackrabbit.oak.spi.commit,org.apache.jackrabbit.oak.spi.mount,org.apache.jackrabbit.oak.spi.state,org.apache.jackrabbit.oak.stats,org.osgi.service.component</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.composite.CompositeCheckpointMBean" delta="added">
        <extends name="org.apache.jackrabbit.oak.commons.jmx.AbstractCheckpointMBean" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.composite.CompositeNodeStore)" delta="added"/>
        <method name="collectCheckpoints(javax.management.openmbean.TabularDataSupport)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createCheckpoint(long)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="getOldestCheckpointCreationTimestamp()" delta="added">
          <return name="long" delta="added"/>
        </method>
        <method name="releaseCheckpoint(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CompositeNodeStore" delta="added">
        <implements name="org.apache.jackrabbit.oak.spi.commit.Observable" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.spi.state.NodeStore" delta="added"/>
        <method name="addObserver(org.apache.jackrabbit.oak.spi.commit.Observer)" delta="added">
          <return name="java.io.Closeable" delta="added"/>
        </method>
        <method name="checkpoint(JLjava/util/Map&lt;Ljava/lang/String;Ljava/lang/String;&gt;;)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="checkpoint(long)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="checkpointInfo(Ljava/lang/String;)" delta="added">
          <return name="java.util.Map&lt;Ljava.lang.String;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="checkpoints()" delta="added">
          <return name="java.lang.Iterable&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createBlob(java.io.InputStream)" delta="added">
          <return name="org.apache.jackrabbit.oak.api.Blob" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getBlob(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.api.Blob" delta="added"/>
        </method>
        <method name="getRoot()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="merge(org.apache.jackrabbit.oak.spi.state.NodeBuilder,org.apache.jackrabbit.oak.spi.commit.CommitHook,org.apache.jackrabbit.oak.spi.commit.CommitInfo)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="rebase(org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="release(java.lang.String)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="reset(org.apache.jackrabbit.oak.spi.state.NodeBuilder)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="retrieve(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeState" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added">
        <access name="static" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider,org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added"/>
        <method name="addIgnoredReadOnlyWritePath(java.lang.String)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added"/>
        </method>
        <method name="addMount(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added"/>
        </method>
        <method name="assertPartialMountsAreReadOnly()" delta="added"/>
        <method name="build()" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="setPartialReadOnly(boolean)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="with(org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor,org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added"/>
        </method>
        <method name="with(org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.CompositeNodeStore$Builder" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreService" delta="added">
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="activate(Lorg/osgi/service/component/ComponentContext;Ljava/util/Map&lt;Ljava/lang/String;*&gt;;)" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="org.apache.felix.scr.annotations.Activate" delta="added"/>
        </method>
        <method name="bindChecks(org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="bindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="bindNodeStore(Lorg/apache/jackrabbit/oak/spi/state/NodeStoreProvider;Ljava/util/Map&lt;Ljava/lang/String;*&gt;;)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="bindStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="deactivate()" delta="added">
          <access name="protected" delta="added"/>
          <annotated name="org.apache.felix.scr.annotations.Deactivate" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="unbindChecks(org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="unbindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="unbindNodeStore(org.apache.jackrabbit.oak.spi.state.NodeStoreProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="unbindStatisticsProvider(org.apache.jackrabbit.oak.stats.StatisticsProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added">
          <property name="policy='REQUIRE'" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreStats" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor" delta="added"/>
        <implements name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreStatsMBean" delta="added"/>
        <field name="java.lang.String NODE_PATH_DEPTH" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="_PATH_DEPTH" delta="added"/>
        </field>
        <field name="java.lang.String NODE_SWITCH_TO_DEFAULT_MOUNT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="_SWITCH_TO_DEFAULT_MOUNT" delta="added"/>
        </field>
        <field name="java.lang.String NODE_SWITCH_TO_NON_DEFAULT_MOUNT" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="_SWITCH_TO_NON_DEFAULT_MOUNT" delta="added"/>
        </field>
        <field name="java.lang.String STRING_CACHE_SIZE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="STRING_CACHE_SIZE" delta="added"/>
        </field>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.stats.StatisticsProvider,java.lang.String,boolean)" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.stats.StatisticsProvider,java.lang.String,boolean,long,long)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getNodePathCounts()" delta="added">
          <return name="javax.management.openmbean.TabularData" delta="added"/>
        </method>
        <method name="getNodeSwitchToDefaultMount()" delta="added">
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="getNodeSwitchToNonDefaultMount()" delta="added">
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="getStringCacheSize()" delta="added">
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="onAddStringCacheEntry()" delta="added"/>
        <method name="onCreateNodeObject(java.lang.String)" delta="added"/>
        <method name="onSwitchNodeToNative(org.apache.jackrabbit.oak.spi.mount.Mount)" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CrossMountReferenceValidator" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.commit.DefaultValidator" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.mount.MountInfoProvider,boolean)" delta="added"/>
        <method name="childNodeAdded(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.commit.Validator" delta="added"/>
        </method>
        <method name="childNodeChanged(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.commit.Validator" delta="added"/>
        </method>
        <method name="enter(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added"/>
        <method name="leave(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added"/>
        <method name="propertyAdded(org.apache.jackrabbit.oak.api.PropertyState)" delta="added"/>
        <method name="propertyChanged(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.api.PropertyState)" delta="added"/>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.CrossMountReferenceValidatorProvider" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.commit.ValidatorProvider" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="bindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getRootValidator(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.commit.CommitInfo)" delta="added">
          <access name="protected" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.commit.Validator" delta="added"/>
        </method>
        <method name="unbindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added">
          <property name="label='Apache Jackrabbit Oak CrossMountReferenceValidatorProvider'" delta="added"/>
          <property name="policy='REQUIRE'" delta="added"/>
        </annotated>
        <annotated name="org.apache.felix.scr.annotations.Property" delta="added">
          <property name="name='type'" delta="added"/>
          <property name="propertyPrivate=true" delta="added"/>
          <property name="value.0='crossMountRefValidator'" delta="added"/>
        </annotated>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.spi.commit.ValidatorProvider" delta="added"/>
          <property name="value.1=org.apache.jackrabbit.oak.spi.commit.EditorProvider" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.InitialContentMigrator" delta="added">
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.mount.Mount)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="migrate()" delta="added"/>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.ModifiedPathDiff" delta="added">
        <implements name="org.apache.jackrabbit.oak.spi.state.NodeStateDiff" delta="added"/>
        <method name="childNodeAdded(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="childNodeChanged(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="childNodeDeleted(java.lang.String,org.apache.jackrabbit.oak.spi.state.NodeState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getModifiedPaths(Lorg/apache/jackrabbit/oak/spi/state/NodeState;Lorg/apache/jackrabbit/oak/spi/state/NodeState;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.util.Set&lt;Ljava.lang.String;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="propertyAdded(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="propertyChanged(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="propertyDeleted(org.apache.jackrabbit.oak.api.PropertyState)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.MountInfoProviderService" delta="added">
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added">
          <property name="label='Apache Jackrabbit Oak MountInfoProvider'" delta="added"/>
          <property name="metatype=false" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.MountedNodeStore" delta="added">
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.spi.mount.Mount,org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getMount()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.mount.Mount" delta="added"/>
        </method>
        <method name="getNodeStore()" delta="added">
          <return name="org.apache.jackrabbit.oak.spi.state.NodeStore" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.NodeMap" delta="added">
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="create(Ljava/util/Map&lt;Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;TT;&gt;;)" delta="added">
          <access name="static" delta="added"/>
          <return name="org.apache.jackrabbit.oak.composite.NodeMap&lt;TT;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="get(Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;)" delta="added"/>
        <method name="getAndApply(Ljava/util/function/BiFunction&lt;Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;TT;TR;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.NodeMap&lt;TR;&gt;" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="lazyApply(Ljava/util/function/BiFunction&lt;Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;TT;TR;&gt;;)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.NodeMap&lt;TR;&gt;" delta="added"/>
        </method>
        <method name="replaceNode(Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;TT;)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.NodeMap&lt;TT;&gt;" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.PrivateStoreValidatorProvider" delta="added">
        <extends name="org.apache.jackrabbit.oak.spi.commit.ValidatorProvider" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="bindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getRootValidator(org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.state.NodeState,org.apache.jackrabbit.oak.spi.commit.CommitInfo)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="org.apache.jackrabbit.oak.spi.commit.Validator" delta="added"/>
        </method>
        <method name="unbindMountInfoProvider(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added">
          <property name="label='Apache Jackrabbit Oak PrivateStoreValidatorProvider'" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.StringCache" delta="added">
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="get(java.lang.String)" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="withMonitor(org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.StringCache" delta="added"/>
        </method>
      </class>
      <interface name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor" delta="added">
        <access name="abstract" delta="added"/>
        <field name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreMonitor EMPTY_INSTANCE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
        </field>
        <method name="onAddStringCacheEntry()" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="onCreateNodeObject(java.lang.String)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <method name="onSwitchNodeToNative(org.apache.jackrabbit.oak.spi.mount.Mount)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <interface name="org.apache.jackrabbit.oak.composite.CompositeNodeStoreStatsMBean" delta="added">
        <access name="abstract" delta="added"/>
        <field name="java.lang.String TYPE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="CompositeNodeStoreStats" delta="added"/>
        </field>
        <method name="getNodePathCounts()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.management.openmbean.TabularData" delta="added"/>
        </method>
        <method name="getNodeSwitchToDefaultMount()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="getNodeSwitchToNonDefaultMount()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <method name="getStringCacheSize()" delta="added">
          <access name="abstract" delta="added"/>
          <return name="javax.management.openmbean.CompositeData" delta="added"/>
        </method>
        <annotated name="org.osgi.annotation.versioning.ProviderType" delta="added"/>
      </interface>
      <version name="0.2.0" delta="added"/>
    </package>
    <package name="org.apache.jackrabbit.oak.composite.checks" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.composite,org.apache.jackrabbit.oak.plugins.nodetype,org.apache.jackrabbit.oak.spi.mount,org.apache.jackrabbit.oak.spi.state,org.osgi.service.component</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.composite.checks.NamespacePrefixNodestoreChecker" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="check(org.apache.jackrabbit.oak.composite.MountedNodeStore,org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.composite.checks.ErrorHolder,org.apache.jackrabbit.oak.composite.checks.NamespacePrefixNodestoreChecker$Context)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createContext(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.checks.NamespacePrefixNodestoreChecker$Context" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added"/>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.checks.NodeStoreChecksService" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="&lt;init&gt;(Lorg/apache/jackrabbit/oak/spi/mount/MountInfoProvider;Ljava/util/List&lt;Lorg/apache/jackrabbit/oak/composite/checks/MountedNodeStoreChecker&lt;*&gt;;&gt;;)" delta="added"/>
        <method name="bindChecker(Lorg/apache/jackrabbit/oak/composite/checks/MountedNodeStoreChecker&lt;*&gt;;)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="bindMip(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="check(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.composite.MountedNodeStore)" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="unbindChecker(Lorg/apache/jackrabbit/oak/composite/checks/MountedNodeStoreChecker&lt;*&gt;;)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="unbindMip(org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added"/>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.checks.NodeTypeDefinitionNodeStoreChecker" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="check(org.apache.jackrabbit.oak.composite.MountedNodeStore,org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.composite.checks.ErrorHolder,org.apache.jackrabbit.oak.composite.checks.NodeTypeDefinitionNodeStoreChecker$Context)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createContext(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.checks.NodeTypeDefinitionNodeStoreChecker$Context" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added"/>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.checks.NodeTypeMountedNodeStoreChecker" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="&lt;init&gt;(java.lang.String,java.lang.String,java.lang.String[])" delta="added"/>
        <method name="activate(org.osgi.service.component.ComponentContext)" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="check(org.apache.jackrabbit.oak.composite.MountedNodeStore,org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.composite.checks.ErrorHolder,org.apache.jackrabbit.oak.composite.checks.NodeTypeMountedNodeStoreChecker$Context)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createContext(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.checks.NodeTypeMountedNodeStoreChecker$Context" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added">
          <property name="configurationFactory=true" delta="added"/>
          <property name="policy='REQUIRE'" delta="added"/>
        </annotated>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        </annotated>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.checks.NodeTypeMountedNodeStoreChecker$Context" delta="added">
        <access name="protected" delta="added"/>
        <access name="static" delta="added"/>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getTypeManager()" delta="added">
          <return name="org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
      <class name="org.apache.jackrabbit.oak.composite.checks.UniqueIndexNodeStoreChecker" delta="added">
        <implements name="org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        <method name="&lt;init&gt;()" delta="added"/>
        <method name="check(org.apache.jackrabbit.oak.composite.MountedNodeStore,org.apache.jackrabbit.oak.api.Tree,org.apache.jackrabbit.oak.composite.checks.ErrorHolder,org.apache.jackrabbit.oak.composite.checks.UniqueIndexNodeStoreChecker$Context)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createContext(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.spi.mount.MountInfoProvider)" delta="added">
          <return name="org.apache.jackrabbit.oak.composite.checks.UniqueIndexNodeStoreChecker$Context" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
        <annotated name="org.apache.felix.scr.annotations.Component" delta="added"/>
        <annotated name="org.apache.felix.scr.annotations.Service" delta="added">
          <property name="value.0=org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added"/>
        </annotated>
      </class>
      <interface name="org.apache.jackrabbit.oak.composite.checks.MountedNodeStoreChecker" delta="added">
        <access name="abstract" delta="added"/>
        <method name="check(Lorg/apache/jackrabbit/oak/composite/MountedNodeStore;Lorg/apache/jackrabbit/oak/api/Tree;Lorg/apache/jackrabbit/oak/composite/checks/ErrorHolder;TT;)" delta="added">
          <access name="abstract" delta="added"/>
          <return name="boolean" delta="added"/>
        </method>
        <method name="createContext(Lorg/apache/jackrabbit/oak/spi/state/NodeStore;Lorg/apache/jackrabbit/oak/spi/mount/MountInfoProvider;)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
      <interface name="org.apache.jackrabbit.oak.composite.checks.NodeStoreChecks" delta="added">
        <access name="abstract" delta="added"/>
        <method name="check(org.apache.jackrabbit.oak.spi.state.NodeStore,org.apache.jackrabbit.oak.composite.MountedNodeStore)" delta="added">
          <access name="abstract" delta="added"/>
        </method>
      </interface>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T15:01Z" bundleName="oak-store-document" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="unchanged">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation</uses>
      </attributes>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
  <baseline version="1.0.0" vendor="The Apache Software Foundation" vendorURL="http://www.apache.org/" generator="Apache Felix Maven Bundle Plugin" generatorURL="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" analyzer="Bnd" analyzerURL="http://www.aqute.biz/Bnd/Bnd" generatedOn="2022-11-21T14:58Z" bundleName="oak-store-spi" currentVersion="1.8.0" previousVersion="1.6.2">
    <package name="org.apache.jackrabbit.oak.api" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>3.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.api.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.4.2</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.cache" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.management" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.namepath" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.osgi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.atomic" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.document.spi" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.counter" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.nodetype" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.index.property.jmx" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.itemsave" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.tree" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.plugins.value.jcr" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation,javax.jcr,org.apache.jackrabbit.oak.api,org.apache.jackrabbit.oak.namepath</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.plugins.value.jcr.ValueFactoryImpl" delta="added">
        <implements name="javax.jcr.ValueFactory" delta="added"/>
        <method name="&lt;init&gt;(org.apache.jackrabbit.oak.api.Root,org.apache.jackrabbit.oak.namepath.NamePathMapper)" delta="added">
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
        </method>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="createBinary(java.io.InputStream)" delta="added">
          <return name="javax.jcr.Binary" delta="added"/>
        </method>
        <method name="createValue(boolean)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(double)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(java.io.InputStream)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(java.lang.String)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(java.lang.String,int)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(java.math.BigDecimal)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(java.util.Calendar)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(javax.jcr.Binary)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(javax.jcr.Node)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(javax.jcr.Node,boolean)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(long)" delta="added">
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(org.apache.jackrabbit.oak.api.PropertyState,org.apache.jackrabbit.oak.namepath.NamePathMapper)" delta="added">
          <access name="static" delta="added"/>
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValue(org.apache.jackrabbit.oak.api.PropertyValue,org.apache.jackrabbit.oak.namepath.NamePathMapper)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="javax.jcr.Value" delta="added"/>
        </method>
        <method name="createValues(Lorg/apache/jackrabbit/oak/api/PropertyState;)" delta="added">
          <return name="java.util.List&lt;Ljavax.jcr.Value;&gt;" delta="added"/>
        </method>
        <method name="createValues(Lorg/apache/jackrabbit/oak/api/PropertyState;Lorg/apache/jackrabbit/oak/namepath/NamePathMapper;)" delta="added">
          <access name="static" delta="added"/>
          <return name="java.util.List&lt;Ljavax.jcr.Value;&gt;" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
    </package>
    <package name="org.apache.jackrabbit.oak.query.facet" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.cluster" delta="added">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <suggestedVersion>0.0.0</suggestedVersion>
      <attributes>
        <uses>javax.annotation,org.apache.jackrabbit.oak.spi.state</uses>
      </attributes>
      <class name="org.apache.jackrabbit.oak.spi.cluster.ClusterRepositoryInfo" delta="added">
        <field name="java.lang.String CLUSTER_CONFIG_NODE" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name=":clusterConfig" delta="added"/>
        </field>
        <field name="java.lang.String CLUSTER_ID_PROP" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name=":clusterId" delta="added"/>
        </field>
        <field name="java.lang.String OAK_CLUSTERID_REPOSITORY_DESCRIPTOR_KEY" delta="added">
          <access name="final" delta="added"/>
          <access name="static" delta="added"/>
          <constant name="oak.clusterid" delta="added"/>
        </field>
        <method name="clone()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="equals(java.lang.Object)" delta="added">
          <return name="boolean" delta="added"/>
        </method>
        <method name="finalize()" delta="added">
          <access name="protected" delta="added"/>
        </method>
        <method name="getOrCreateId(org.apache.jackrabbit.oak.spi.state.NodeStore)" delta="added">
          <access name="static" delta="added"/>
          <annotated name="javax.annotation.CheckForNull" delta="added"/>
          <annotated name="javax.annotation.Nonnull" delta="added"/>
          <return name="java.lang.String" delta="added"/>
        </method>
        <method name="hashCode()" delta="added">
          <return name="int" delta="added"/>
        </method>
        <method name="toString()" delta="added">
          <return name="java.lang.String" delta="added"/>
        </method>
      </class>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.gc" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.mount" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.query" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.callback" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.credentials" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authentication.token" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.accesscontrol" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.permission" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>4.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.authorization.restriction" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.principal" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.4.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.privilege" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>2.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.action" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.1.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.security.user.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>1.2.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.whiteboard" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.spi.xml" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.stats" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
    <package name="org.apache.jackrabbit.oak.util" delta="removed">
      <mismatch>false</mismatch>
      <newerVersion>0.0.0</newerVersion>
      <olderVersion>0.0.0</olderVersion>
      <info>Package removed</info>
      <attributes/>
    </package>
  </baseline>
</root>
